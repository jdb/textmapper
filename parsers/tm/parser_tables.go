// generated by Textmapper; DO NOT EDIT

package tm

import (
	"fmt"

	"github.com/inspirer/textmapper/parsers/tm/token"
)

var recoveryScopeStates = map[int]bool{
	108: true,
	186: true,
	218: true,
	219: true,
	270: true,
	468: true,
}

var tmNonterminals = [...]string{
	"identifier",
	"identifier_Keywords",
	"identifier_Str",
	"integer_literal",
	"string_literal",
	"boolean_literal",
	"literal",
	"pattern",
	"command",
	"syntax_problem",
	"file",
	"import__optlist",
	"option_optlist",
	"header",
	"lexer_section",
	"parser_section",
	"import_",
	"option",
	"symref",
	"symref_Args",
	"rawType",
	"lexer_parts",
	"lexer_part",
	"lexer_part_OrSyntaxError",
	"named_pattern",
	"start_conditions_scope",
	"start_conditions",
	"stateref_list_Comma_separated",
	"lexeme",
	"lexeme_id",
	"lexeme_attrs",
	"lexeme_attribute",
	"lexer_directive",
	"lexer_state_list_Comma_separated",
	"stateref",
	"lexer_state",
	"grammar_parts",
	"grammar_part",
	"grammar_part_OrSyntaxError",
	"nonterm",
	"nonterm_alias",
	"assoc",
	"param_modifier",
	"template_param",
	"directive",
	"identifier_list_Comma_separated",
	"inputref_list_Comma_separated",
	"inputref",
	"references",
	"rules",
	"rule0",
	"predicate",
	"reportClause",
	"reportAs",
	"rhsParts",
	"rhsPart",
	"rhsPart_OrSyntaxError",
	"lookahead_predicate_list_And_separated",
	"rhsLookahead",
	"lookahead_predicate",
	"rhsStateMarker",
	"rhsAssignment",
	"rhsOptional",
	"rhsCast",
	"rhsAlias",
	"listSeparator",
	"rhsPrimary",
	"rhsSet",
	"setPrimary",
	"setExpression",
	"nonterm_param_list_Comma_separated",
	"nonterm_params",
	"nonterm_param",
	"param_ref",
	"args",
	"argument_list_Comma_separated",
	"argument_list_Comma_separatedopt",
	"argument",
	"param_type",
	"param_value",
	"predicate_primary",
	"predicate_expression",
	"expression",
	"expression_list_Comma_separated",
	"rawTypeopt",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmDefGoto = []int32{
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1,
}

var tmGoto = []int32{
	1011, 101, -83, 5765, 4639, 962, 1000, -377, 45, 4821, 683, 681, 612, 687,
	300, 32, 617, 606, -100, 1231, -32, 136, 154, 85, -197, -164, -122, 313, -47,
	75, 677, 141, -34, -119, -266, -142, 436, 437, 318, 18, 81, 320, 323, 221,
	275, 190, 237, 71, 147, 8122, 7946, 7982, 271, 344, 7770, 7806, 169, 589,
	6982, 488, 7018, 7158, 5845, 5912, 6067, 502, 6134, 5003, -40, -69, 623, 524,
	389, 270, 373, 495, 533, 322, 163, -253, 50, 134, -77, 361, -180,
}

var tmDefAct = []int32{
	-1, -1, -1, 126, 0, 10, 1, 23, 11, 21, 22, 14, -1, 17, 9, 13, 27, -1, 5, 24,
	30, 29, 28, 6, 31, 15, 18, 8, 12, 16, 32, 3, 7, 19, 4, 25, 20, -1, 33, 69,
	67, 70, 68, 71, 66, 43, 34, 56, 44, 54, 55, 47, 59, 50, 42, 46, 60, 35, 38,
	57, 63, 62, 61, 39, 64, 48, 51, 41, 45, 49, 65, 36, 40, 52, 37, 58, 53, -1,
	-1, 26, 2, -1, -1, -1, -1, -1, -1, 139, -1, -1, -1, -1, 130, -1, -1, -1, 125,
	-1, -1, -1, -1, -1, -1, -1, 74, -1, -1, -1, -1, -1, -1, 116, 72, 73, -1, 84,
	75, 97, 85, 95, 96, 88, 100, 91, 83, 87, 101, 76, 79, 98, 104, 103, 102, 80,
	105, 89, 92, 82, 86, 90, 106, 77, 81, 93, 78, 99, 94, 115, 138, 291, 281,
	319, -1, 271, -1, 279, -1, 288, 293, 292, 290, 309, 312, 314, 316, 326, -1,
	-1, -1, -1, 336, 338, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 108, -1,
	-1, -1, -1, -1, -1, 123, 127, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	294, -1, 308, -1, 341, -1, 359, -1, -1, -1, -1, 136, 307, -1, 304, -1, -1,
	-1, -1, -1, 137, -1, 232, 275, -1, -1, 297, 302, 277, 289, 299, 298, 296,
	313, -1, -1, 324, 323, 245, -1, -1, 285, -1, -1, 337, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 134, -1, -1, -1, -1, 119, -1, 121,
	236, -1, -1, -1, 244, -1, -1, -1, -1, -1, -1, -1, 295, 356, -1, -1, -1, 282,
	-1, 320, -1, -1, 306, 305, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 138, 329, 332, -1, 310, -1, -1, -1, -1, -1, 344,
	311, 272, 273, 300, -1, 315, -1, 264, -1, 287, -1, 335, 230, -1, 228, -1, -1,
	-1, 231, 224, -1, -1, -1, -1, -1, -1, -1, 129, 133, -1, -1, -1, -1, -1, 140,
	142, 145, -1, 143, 144, -1, -1, 208, 210, 211, 212, 107, -1, 110, 109, 112,
	111, 113, 362, 367, 135, 117, 234, -1, 235, 242, -1, 243, 240, -1, -1, -1,
	357, 358, -1, -1, 269, -1, -1, 303, 325, -1, 331, 328, -1, 327, -1, 349, 350,
	-1, -1, 342, 301, 317, -1, 283, 353, 354, 339, 229, 226, -1, 227, 222, -1,
	220, -1, -1, -1, 223, -1, -1, -1, -1, 206, -1, 156, -1, -1, 370, -1, -1, 150,
	141, 146, 149, 147, 148, -1, -1, -1, -1, -1, 351, -1, -1, -1, -1, 246, 249,
	248, 352, 247, -1, -1, -1, 216, 209, 213, 214, 215, -1, 366, 369, -1, 233,
	241, 238, -1, 239, 270, 322, 321, 330, -1, -1, 347, 343, 263, 225, 221, 218,
	-1, 219, -1, 207, -1, 205, -1, 153, -1, 154, 114, 151, -1, -1, 196, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 266, -1, -1, -1, -1, 365, -1, 364, 237,
	217, -1, 202, -1, 203, 155, 197, 186, -1, 194, 195, 152, -1, 176, -1, -1,
	260, 261, -1, -1, 267, 255, -1, 256, 254, -1, -1, 253, 363, 368, 201, 204,
	184, 185, 199, 200, -1, 190, 193, -1, 166, 174, 175, 257, 258, -1, 262, 265,
	-1, 251, -1, 180, 183, -1, 198, 189, -1, 191, 164, 165, 170, 173, -1, 259,
	-1, 252, 179, -1, 181, 187, 160, 163, -1, 169, -1, 171, 250, 177, 159, -1,
	161, 167, 157, -1, -1, -1, -1,
}

const tmActionBase = -83

var tmAction = []int32{
	-7, 7696, 5244, -83, -83, -83, -83, -83, -83, -83, -83, -83, 5402, -83, -83,
	-83, -83, 5486, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -15, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, 212, 5648, -83, -83, -17, 59, 758, 5244, 7736, 7736, -83, -11, 65,
	120, 189, -83, 5244, 7418, 6389, -83, 758, -8, 207, 758, 188, 289, 228, -83,
	15, 7736, 7480, 515, 6496, 529, -83, -83, -83, 532, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, -83, 1542, -83,
	-83, -83, 109, -83, 1078, -83, 838, -83, -83, -83, -83, -83, 6858, 7569,
	7817, -83, 526, 82, 6892, 285, -83, -83, 758, 545, 758, 295, 581, 758, 758,
	298, 230, 582, 578, -83, 601, 590, 200, 596, 193, 305, -83, -83, 314, 758,
	593, 758, 355, 758, 595, 758, 758, 371, 597, -83, 6932, -83, 7736, -83, 61,
	-83, 232, 69, 918, 6932, -83, -83, 354, -83, 515, 5727, 5567, 5905, 5567,
	-83, 670, -83, -83, 998, 283, -83, -83, -83, -83, -83, -83, -83, -83, 6932,
	5244, -83, -83, -83, 7736, 7736, -83, 248, 7736, -83, 388, 758, 392, 758,
	598, 758, 402, 408, 758, 599, 758, 412, 600, 758, 604, 605, -83, 5806, 7603,
	186, 382, -83, 540, -83, -83, 423, 758, 426, -83, 432, 758, 443, 444, 758,
	603, 758, -83, -83, 233, 233, 7480, -83, 7480, -83, 6932, 610, -83, -83,
	6496, 312, 5727, 5727, 1630, 1710, 1790, 1870, 1950, 2030, 2110, 2190, 2270,
	2350, 2430, 2510, 2590, 2670, 2750, 2830, 2910, 2990, 3070, 3150, 3230, 3310,
	3390, 3470, 3550, 3630, 3710, 3790, 3870, 3950, 4030, 4110, 4190, 6932, 8407,
	-83, -83, 252, -83, 7736, 7736, 105, 393, 609, -83, -83, -83, -83, -83, 6932,
	-83, 607, -83, 116, -83, 5847, -83, -83, 446, -83, 450, 758, 463, -83, -83,
	464, 758, 467, 758, 620, 758, 475, -83, -83, 211, 7656, 611, -5, 5067, -83,
	-83, -83, 6538, -83, -83, 98, 6619, -83, -83, -83, -83, -83, 67, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, 484, -83, -83, 487, -83, -83, 490,
	758, 491, -83, -83, 244, 262, -83, 6698, 14, -83, -83, 327, -83, -83, 5727,
	-83, 5727, -83, -83, 5847, 6984, -83, -83, -83, 7736, -83, -83, -83, -83,
	-83, -83, 493, -83, -83, 494, -83, 497, 758, 500, -83, 6932, 7736, 7736, 615,
	-83, 399, -83, 546, 5244, -83, 381, 626, -83, -83, -83, -83, -83, -83, 5806,
	-5, 357, 643, 643, -83, 7736, 6932, 6932, 7736, -83, -83, -83, -83, -83,
	6932, 107, 7736, -83, -83, -83, -83, -83, 629, -83, -83, 88, -83, -83, -83,
	503, -83, -83, -83, -83, -83, 356, 363, -83, -83, -83, -83, -83, -83, 504,
	-83, 6932, -83, 332, -83, 511, -83, 7736, -83, -83, -83, 627, 635, 17, 5326,
	381, 637, 613, 613, 641, 642, 646, 640, 222, 518, -83, 525, 6777, 7736, 278,
	-83, 184, -83, -83, -83, 650, -83, 7736, -83, -83, -83, 17, 547, 1177, -83,
	-83, 651, 17, 653, 655, -83, -83, 613, 658, -83, -83, 6932, -83, -83, 469,
	5847, -83, -83, -83, -83, -83, 1177, -83, -83, -83, 652, 4271, -83, 4320, 17,
	1177, -83, -83, -83, 659, -83, -83, 5847, -83, 660, 4271, -83, 4402, -83,
	-83, 4484, -83, 1177, -83, 4271, -83, 4566, -83, 662, -83, -83, 4648, -83,
	-83, 4271, -83, 4730, -83, 4812, -83, -83, -83, -83, 4894, -83, -83, -83,
	679, 682, -83, -83,
}

const tmTableLen = 8570

var tmTable = []int16{
	148, -99, -86, -85, -86, 88, -87, -174, -87, 215, -195, -88, -87, 371, 148,
	-87, -460, 148, -1, 631, -1, -1, -1, -1, -1, 148, 214, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -557, -1, -1, -1, -503, -504, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 175, -4, 179, -1, -1, -1, -1, -1, -1, -89, -205,
	380, -185, -393, 148, 355, 148, -288, -289, -89, -102, -86, -226, 523, 355,
	-87, -176, -493, -88, -394, -494, -87, 148, -206, 148, 286, -293, 148, 148,
	355, 286, -1, -524, 286, 381, 438, 77, 284, -546, 286, -113, -547, 456, 148,
	-395, 148, 294, 148, -396, 148, 148, 89, -226, -244, 214, 348, -431, -227,
	-245, 284, 190, 149, 148, 214, 284, 348, -436, 284, 148, 334, 334, -179, 334,
	284, 148, 149, 382, 148, 149, -89, -472, 259, 556, 337, -473, -474, 149, 334,
	-475, -476, 209, -477, -245, -478, -479, 98, 101, -475, -480, 148, -481, 148,
	-482, 148, -483, 180, 148, -484, 148, 506, 579, 148, 336, -483, 464, 377,
	588, 201, 166, -185, -393, -185, -393, 400, 148, 416, 120, 182, 148, 215,
	461, 148, 149, 148, 229, -188, -394, -577, -394, -199, -180, -86, 214, 605,
	-87, -87, 214, 465, 334, 334, 149, 383, 149, 269, 271, 149, 149, -113, -197,
	-113, -94, -395, 421, -395, 384, -396, -95, -396, -185, -393, 268, 149, 268,
	149, 210, 149, -290, 149, 149, -202, -86, -260, 432, 334, -87, -291, -87,
	552, 361, 382, 229, 336, 422, -357, -452, -426, 149, 361, 340, 214, -292,
	-267, 149, -89, 380, 229, 360, -268, 340, -427, -395, 148, -292, 525, -396,
	360, 148, 388, 148, -428, 148, -453, 529, -575, -454, -569, -576, 149, 377,
	149, 360, 149, 469, 401, 149, -248, 149, 381, 122, 149, -201, 90, 517, 517,
	-89, -249, -253, -272, 493, -258, 500, -87, 149, 597, -87, -226, 149, -226,
	232, 149, 148, 149, -274, 464, 466, 516, 518, 214, -350, -422, -426, 209,
	351, 209, 334, 611, 334, 467, 459, 382, -551, 559, -552, 514, -505, 99, 102,
	155, 504, 171, 505, -351, 173, 176, -428, 181, 465, 148, -226, 333, 214, 155,
	194, -278, 155, 198, 334, 202, 535, 536, 208, -297, 155, 333, 232, 118, 416,
	336, 377, 336, 334, -298, -283, -428, -272, 214, 214, -87, 189, 232, 334,
	-226, 371, 214, 378, -226, -359, 488, 382, 149, -361, 578, -532, -432, 149,
	-226, 149, 548, 149, -522, -365, -226, 379, 345, 383, 414, -366, 415, 226,
	-523, 231, 459, -533, -370, 214, 353, -226, 384, -87, -226, 459, -404, 417,
	500, -406, -226, 155, 377, 155, 252, -407, 155, 155, 257, 260, 460, -226,
	-226, 149, -226, 214, -409, -410, -226, -441, -89, 463, 155, -442, 155, 576,
	155, 536, 155, 155, 282, -226, -226, 170, 285, -226, -444, -445, 466, -597,
	-447, 231, -598, -226, 214, 389, 268, 155, -451, 341, 149, 467, -226, 155,
	459, -226, 347, -497, -226, -226, -498, -226, -226, -499, -501, -226, -511,
	-512, -226, 244, -513, -226, -226, -515, 171, -106, -548, -549, 155, 223,
	155, -107, 155, 280, -553, 155, -552, 155, 369, -108, 155, -570, -109, -571,
	-110, -111, -87, 280, -572, 390, -436, 344, 528, 155, -243, 538, 485, 155,
	-220, -112, 155, -221, 155, -113, -114, -115, 208, 524, 208, 91, -116, -251,
	-117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
	-143, -144, -145, -146, -147, -148, -149, 217, -583, -255, -263, 585, -264,
	-185, 527, -266, 103, 489, -269, 427, 428, -276, 463, -280, -268, -285, -363,
	-368, -372, -374, -375, -412, 379, -459, 599, 437, -584, -435, -524, 602,
	540, 604, 155, 608, -420, 356, -433, 155, -449, 155, 594, 155, -521, 613,
	-528, 615, -393, 541, 616, -545, 618, -555, 620, -556, 622, -562, -565, -566,
	-567, 624, -116, 490, 625, -87, 627, -579, 628, 539, -592, -589, -593, 629,
	-106, -595, -612, -614, -603, -625, -107, -634, 280, 155, -635, 630, 78, 280,
	-108, 3, 455, -109, 95, -110, -111, -87, 280, 96, 583, 435, 216, 437, 341,
	191, 386, 387, 487, 483, -112, 223, 484, 169, -113, -114, -115, 537, 293, 0,
	342, -116, 155, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126,
	-127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139,
	-140, -141, -142, -143, -144, -145, -146, -147, -148, -149, 507, 494, 343, 0,
	0, 0, 0, 0, -106, 0, 0, 0, 0, 0, -107, 0, 280, 0, 0, 0, 0, 280, -108, 0, 0,
	-109, 0, -110, -111, -87, 0, 0, 419, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0,
	0, -113, -114, -115, 0, 0, 0, 0, -116, 566, -117, -118, -119, -120, -121,
	-122, -123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134,
	-135, -136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147,
	-148, -149, -106, 0, 0, 437, 0, 0, -230, 0, 278, 0, 0, 0, 0, 278, -108, 0, 0,
	0, 0, -110, -111, -87, 278, 0, 0, 437, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0,
	-113, -114, -115, 0, 0, 0, 0, -116, 0, -117, -118, -119, -120, -121, -122,
	-123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135,
	-136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148,
	-149, -106, 0, 0, 0, 0, 0, -230, 0, 278, 0, 0, 0, 0, 0, -108, 0, 0, 0, 0,
	-110, -111, -87, 278, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 0, -113,
	-114, -115, 0, 0, 0, -294, -116, 0, -117, -118, -119, -120, -121, -122, -123,
	-124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136,
	-137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -149,
	-106, 0, 0, 0, 0, 0, -230, 0, 274, 0, 0, 0, 37, 274, -108, 0, 0, 0, 0, -110,
	-111, -87, 274, 81, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, -112, 0, 0, 0, -113, -114,
	-115, 0, 0, 0, 0, -116, 0, -117, -118, -119, -120, -121, -122, -123, -124,
	-125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137,
	-138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -149, -106,
	0, 0, 0, 0, 0, -107, 0, 276, 0, 0, 0, 0, 276, -108, 0, 167, 168, 0, -110,
	-111, -87, 276, 0, 0, 184, 187, 0, 0, 0, 0, 0, 0, 0, -112, 0, 0, 205, 207,
	-114, -115, 0, 0, 0, 0, -116, 0, -117, -118, -119, -120, -121, -122, -123,
	-124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136,
	-137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 245, -393, -1, -1,
	-1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -557, -1, -1, -1,
	0, 557, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 207, 0, 0, -1,
	-1, -1, -1, -1, -1, 0, 0, 0, 397, 333, 580, 207, 586, 0, 0, 0, 589, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 397, 0, 0, 0, 352, 354, 0, 600, 168, -149, -1, 0,
	603, 0, 0, 606, 609, 0, 398, 0, 0, 0, 0, 0, 0, 0, 614, 376, 37, 0, 0, 0, 0,
	619, 0, 621, 0, 412, 413, 0, 0, 0, 0, 0, 0, 626, 0, 0, 0, 0, 207, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 333, 333, 0, 0, 0, 151, 0, 0, 397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 207, 0, 0, 397, 436, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 151, 454, 151, 0, 376, 0, 397, 398, 0,
	0, 0, 0, 37, 0, 0, 0, 0, 0, 151, 0, 151, 0, 0, 151, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 151, 0, 151, 436, 151, 151, 0, 0, 0, 333, 0,
	333, 0, 0, 207, 207, 0, 151, 0, 508, 0, 0, 0, 151, 335, 151, 0, 151, 0, 151,
	0, 0, 151, 0, 0, 0, 515, 515, 0, 0, 0, 0, 350, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	376, 151, 0, 151, 0, 151, 534, 0, 151, 352, 151, 0, 0, 151, 0, 0, 0, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 397, 0, 0, 151, 0, 0, 151, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335, 335, 454, 0, 0, 0, 397, 0, 0, 376, 0, 0, 0,
	-1, -1, 398, -1, -1, -1, -1, -1, 0, -1, 572, -1, -222, -1, -1, 397, 0, -1,
	-1, 515, -1, 0, 423, 0, 0, -1, -223, -1, 0, 0, -224, 436, -1, -1, -1, -1, 0,
	-1, -1, -1, 0, 0, 207, 0, -1, -1, 0, 0, -1, 0, 151, 0, 0, 436, 0, 151, 0,
	151, 0, 151, 0, 0, 0, 0, 207, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 151, 0, 0, 0, 0, 0,
	0, 72, 0, 0, 72, 0, 0, 72, 335, 72, 335, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 10, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 10, 0, 0, 0, 0, 0, 84, 0, 0, 84, 0, 0, 84, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 10, 10, 0, 0, 0, 0, 0, 0, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
	10, 10, 10, 10, 10, 10, 84, 1, 0, 0, 0, 0, 0, 0, 0, 75, 0, 1, 0, 0, 0, 0, 0,
	75, 0, 0, 75, 0, 0, 75, 0, 75, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 1,
	1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 75, 23, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	23, 0, 0, 0, 0, 0, 97, 0, 0, 97, 0, 0, 97, 0, 97, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 23, 23, 0, 0, 0, 0, 0, 0, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 97, 11, 0, 0, 0, 0, 0, 0, 0, 85, 0, 11, 0, 0, 0, 0, 0, 85, 0,
	0, 85, 0, 0, 85, 0, 85, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 11, 11, 0,
	0, 0, 0, 0, 0, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 85, 21,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 21, 0, 0, 0, 0, 0, 95, 0, 0, 95, 0, 0, 95, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 0, 0, 0, 0, 0, 21, 21, 0, 0, 0, 0, 0, 0, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 95, 22, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 22, 0, 0, 0, 0, 0, 96, 0, 0, 96, 0, 0, 96, 0, 96, 0, 0, 0, 0, 0, 0, 0, 96,
	0, 0, 0, 0, 0, 0, 22, 22, 0, 0, 0, 0, 0, 0, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 96, 14, 0, 0, 0, 0, 0, 0, 0, 88, 0, 14, 0, 0, 0, 0, 0,
	88, 0, 0, 88, 0, 0, 88, 0, 88, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 14,
	14, 0, 0, 0, 0, 0, 0, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 88,
	26, 0, 0, 0, 0, 0, 0, 0, 100, 0, 26, 0, 0, 0, 0, 0, 100, 0, 0, 100, 0, 0,
	100, 0, 100, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 26, 26, 0, 0, 0, 0,
	0, 0, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 100, 17, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 17, 0, 0, 0, 0, 0, 91, 0, 0, 91, 0, 0, 91, 0, 91, 0, 0, 0, 0,
	0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 17, 17, 0, 0, 0, 0, 0, 0, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 91, 9, 0, 0, 0, 0, 0, 0, 0, 83, 0, 9, 0, 0,
	0, 0, 0, 83, 0, 0, 83, 0, 0, 83, 0, 83, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0,
	0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 83, 13, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 13, 0, 0, 0, 0, 0, 87, 0, 0, 87, 0, 0, 87, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 0, 13, 13, 0, 0, 0, 0, 0, 0, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 87, 27, 0, 0, 0, 0, 0, 0, 0, 101, 0, 27, 0, 0, 0, 0,
	0, 101, 0, 0, 101, 0, 0, 101, 0, 101, 0, 0, 0, 0, 0, 0, 0, 101, 0, 0, 0, 0,
	0, 0, 27, 27, 0, 0, 0, 0, 0, 0, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 101, 2, 0, 0, 0, 0, 0, 0, 0, 76, 0, 2, 0, 0, 0, 0, 0, 76, 0, 0, 76,
	0, 0, 76, 0, 76, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0,
	0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 76, 5, 0, 0, 0, 0, 0, 0, 0, 79, 0, 5, 0, 0, 0, 0, 0,
	79, 0, 0, 79, 0, 0, 79, 0, 79, 0, 0, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 5,
	5, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 79, 24, 0, 0, 0, 0, 0, 0, 0, 98, 0,
	24, 0, 0, 0, 0, 0, 98, 0, 0, 98, 0, 0, 98, 0, 98, 0, 0, 0, 0, 0, 0, 0, 98, 0,
	0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0, 0, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 98, 30, 0, 0, 0, 0, 0, 0, 0, 104, 0, 30, 0, 0, 0, 0, 0, 104,
	0, 0, 104, 0, 0, 104, 0, 104, 0, 0, 0, 0, 0, 0, 0, 104, 0, 0, 0, 0, 0, 0, 30,
	30, 0, 0, 0, 0, 0, 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 104,
	29, 0, 0, 0, 0, 0, 0, 0, 103, 0, 29, 0, 0, 0, 0, 0, 103, 0, 0, 103, 0, 0,
	103, 0, 103, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0, 0, 0, 0, 0, 29, 29, 0, 0, 0, 0,
	0, 0, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29,
	29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 103, 28, 0, 0, 0, 0,
	0, 0, 0, 102, 0, 28, 0, 0, 0, 0, 0, 102, 0, 0, 102, 0, 0, 102, 0, 102, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 28, 28, 0, 0, 0, 0, 0, 0, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 102, 6, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	6, 0, 0, 0, 0, 0, 80, 0, 0, 80, 0, 0, 80, 0, 80, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 80, 31, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 31, 0, 0, 0, 0, 0, 105, 0, 0, 105, 0, 0, 105, 0, 105, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 0, 0, 0, 31, 31, 0, 0, 0, 0, 0, 0, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 105, 15, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	15, 0, 0, 0, 0, 0, 89, 0, 0, 89, 0, 0, 89, 0, 89, 0, 0, 0, 0, 0, 0, 0, 89, 0,
	0, 0, 0, 0, 0, 15, 15, 0, 0, 0, 0, 0, 0, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 15, 15, 15, 89, 18, 0, 0, 0, 0, 0, 0, 0, 92, 0, 18, 0, 0, 0, 0, 0, 92, 0,
	0, 92, 0, 0, 92, 0, 92, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, 0, 18, 18, 0,
	0, 0, 0, 0, 0, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 92, 8, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 8, 0, 0, 0, 0, 0, 82, 0, 0, 82, 0, 0, 82, 0, 82, 0,
	0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,
	8, 8, 82, 12, 0, 0, 0, 0, 0, 0, 0, 86, 0, 12, 0, 0, 0, 0, 0, 86, 0, 0, 86, 0,
	0, 86, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 12, 12, 0, 0, 0, 0,
	0, 0, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 86, 16, 0, 0, 0, 0,
	0, 0, 0, 90, 0, 16, 0, 0, 0, 0, 0, 90, 0, 0, 90, 0, 0, 90, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 0, 0, 0, 16, 16, 0, 0, 0, 0, 0, 0, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 90, 32, 0, 0, 0, 0, 0, 0, 0, 106, 0, 32, 0,
	0, 0, 0, 0, 106, 0, 0, 106, 0, 0, 106, 0, 106, 0, 0, 0, 0, 0, 0, 0, 106, 0,
	0, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 106, 3, 0, 0, 0, 0, 0, 0, 0, 77, 0, 3, 0, 0, 0, 0, 0, 77, 0,
	0, 77, 0, 0, 77, 0, 77, 0, 0, 0, 0, 0, 0, 0, 77, 0, 0, 0, 0, 0, 0, 3, 3, 0,
	0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 77, 7, 0, 0, 0, 0, 0, 0, 0, 81, 0, 7, 0, 0,
	0, 0, 0, 81, 0, 0, 81, 0, 0, 81, 0, 81, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 81, 19, 0, 0, 0, 0, 0, 0, 0,
	93, 0, 19, 0, 0, 0, 0, 0, 93, 0, 0, 93, 0, 0, 93, 0, 93, 0, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 0, 0, 19, 19, 0, 0, 0, 0, 0, 0, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19,
	19, 19, 19, 19, 19, 19, 93, 4, 0, 0, 0, 0, 0, 0, 0, 78, 0, 4, 0, 0, 0, 0, 0,
	78, 0, 0, 78, 0, 0, 78, 0, 78, 0, 0, 0, 0, 0, 0, 0, 78, 0, 0, 0, 0, 0, 0, 4,
	4, 0, 0, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 78, 25, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	25, 0, 0, 0, 0, 0, 99, 0, 0, 99, 0, 0, 99, 0, 99, 0, 0, 0, 0, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 25, 25, 0, 0, 0, 0, 0, 0, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 99, 20, 0, 0, 0, 0, 0, 0, 0, 94, 0, 20, 0, 0, 0, 0, 0, 94, 0,
	0, 94, 0, 0, 94, 0, 94, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, 0, 20, 20, 0,
	0, 0, 0, 0, 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 94, -1,
	0, -1, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-557, -1, -1, -1, 0, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	0, 0, 0, -1, -1, -1, -1, -1, -1, 192, 0, 192, 0, 0, 0, 0, 0, 192, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0, 0, -149, -1, 0,
	0, 0, 0, 0, 0, 192, 192, 192, 0, 0, 0, 0, 0, 0, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, -149, 182, 0, 182, 0,
	0, 0, 0, 0, 182, 182, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 182, 182, 182, 0, 0, 0, 0, 0, 0, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, -149, 188, 0, 188, 0, 0, 0, 0, 0, 188, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 188,
	188, 0, 0, 0, 0, 0, 0, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, -149, 172, 0, 172, 0, 0, 0, 0, 0, 172, 172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 172, 172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 172, 172, 0, 0, 0, 0, 0, 0, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172, 172, -149, 178, 0, 178, 0,
	0, 0, 0, 0, 178, 178, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 178, 178, 0, 0, 0, 0, 0, 0, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, -149, 162, 0, 162, 185, 0, 0, 0, 0, 162, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 162,
	162, 0, 0, 0, 0, 0, 0, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, -149, 168, 0, 168, 0, 0, 0, 0, 0, 168, 168, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 168, 168, 0, 0, 0, 0, 0, 0, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168, 168, -149, 158, 0, 158, 0,
	0, 0, 0, 0, 158, 158, 150, 0, 396, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 150,
	158, 158, 150, 0, 0, 0, 396, 396, 0, 0, 150, 0, 0, 0, 0, 158, 158, 158, 0, 0,
	0, 0, 0, 0, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, -149, 0, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 396, 150, 0, 0, 150, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 150, 0, 150, 0, 150, 150, 0, 0, 0, 0, 0, 0, 0, 0, 0, 396, 0, 230, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0, 150, 0, 0, 230, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 396, -106, 150, 0, 150, 0, 150, -376, 131, 150,
	0, 150, 0, 0, 150, 0, 0, 0, 165, 0, 399, 0, 0, 0, 0, -377, 0, 150, 0, 0, 0,
	150, 165, 0, 150, 165, 150, 0, 0, -113, -302, -115, 0, 165, 0, 0, 0, 0, -303,
	-304, -305, -306, -307, -308, -309, -310, -311, -312, -313, -314, -315, -316,
	-317, -318, -319, -320, -321, -322, -323, -324, -325, -326, -327, -328, -329,
	-330, -331, -332, -333, -334, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 165, 0, 0, 165, 165, 150, 396,
	0, 0, 0, 150, 0, 150, 0, 150, 0, 0, 0, 0, 165, 0, 165, 462, 165, 0, 165, 165,
	0, 0, 0, 486, 0, 0, 0, 0, 396, 399, 0, 165, 0, 0, 0, 0, 0, 165, 0, 165, 0,
	165, 0, 165, 0, 0, 165, 150, 0, 0, 396, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 165, 0, 165, 0, 0, 165, 0, 165, 0, 0, 165, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 165, 0, 0, 165, -40, 165, -41,
	-42, -43, -44, -45, -46, -47, -48, -49, -50, -51, -52, -53, -54, -55, -56,
	-57, -58, -59, -60, -61, -62, -63, -64, -65, -66, -67, -68, -69, -70, -71,
	-72, -73, -74, -75, -76, -77, -78, 0, 0, 0, -106, 0, 0, 0, 0, 0, -376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 462, 0, 0, -560, -377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 399, -113, -302, -115, 165, 0, 165, 0, 165, 0, -303, -304,
	-305, -306, -307, -308, -309, -310, -311, -312, -313, -314, -315, -316, -317,
	-318, -319, -320, -321, -322, -323, -324, -325, -326, -327, -328, -329, -330,
	-331, -332, -333, -334, 0, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0, 0, 0, 26, 26, 0,
	0, 0, 26, 0, 0, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0,
	0, 0, 165, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20,
	-21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,
	-36, -37, -38, 26, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2, 2, 0, 0, 0, 2, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6,
	0, 0, 0, 0, 0, 561, 562, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17,
	-18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32,
	-33, -34, -35, -36, -37, -38, 2, 592, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -112, 0,
	0, 0, 0, -114, -115, 0, 0, 0, 0, -116, 0, -117, -118, -119, -120, -121, -122,
	-123, -124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135,
	-136, -137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148,
	128, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 0, 0, 0, -96, 0, 0,
	0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -301, 0, 0, 0, 0, 0, 0, 0, -302, -115, 0, 0,
	0, 0, 0, 0, -303, -304, -305, -306, -307, -308, -309, -310, -311, -312, -313,
	-314, -315, -316, -317, -318, -319, -320, -321, -322, -323, -324, -325, -326,
	-327, -328, -329, -330, -331, -332, -333, -334, -106, 0, 0, 0, 0, 0, -376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -302, -115, -185, -393, 0, 0, 0, 0, -303, -304, -305, -306,
	-307, -308, -309, -310, -311, -312, -313, -314, -315, -316, -317, -318, -319,
	-320, -321, -322, -323, -324, -325, -326, -327, -328, -329, -330, -331, -332,
	-333, -334, 0, -6, 0, 0, -395, 0, 0, 0, -396, -7, -8, -9, -10, -11, -12, -13,
	-81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28,
	-29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 161, 0, 0, 0, 346, 0, -341,
	0, 0, 0, -342, 0, 0, 0, 161, 0, 0, 161, -6, 0, 0, 0, 0, 0, 0, 161, -7, -8,
	-9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 161, 0, 161, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 162, 0, 0, 0, 0, 161, 0, 161, 162, 0, 161, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	395, 0, 0, 0, 0, 0, 161, 0, 161, 0, 161, 0, 161, 161, 0, 0, 0, 0, 0, 395,
	395, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 161, 0, 338, 162, 345, 162, 161, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 162, 0, 0, 162, 162, 0, 0, 0,
	161, 0, 161, 0, 161, 0, 0, 161, 0, 161, 0, 162, 161, 162, 0, 162, 0, 162,
	162, 0, 0, 0, 0, 0, 0, 161, 395, 0, 0, 161, 162, 0, 161, 0, 161, 0, 162, 0,
	162, 0, 162, 0, 162, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 395, 0, 0, 0, 162, 0, 162, 163, 162, 0, 163, 162, 0, 162, 0, 0, 162,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 162, 0, 0, 162, 395, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 161, 0, 161, 0, 161, 0, 164,
	0, 0, 0, 163, 0, 163, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 164, 0, 532, 533, 0,
	163, 0, 163, 164, 0, 163, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	163, 0, 163, 0, 163, 0, 163, 163, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 162, 163,
	162, 0, 162, 0, 0, 163, 0, 163, 164, 163, 164, 163, 161, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 164, 395, 0, 164, 164, 0, 0, 0, 163, 0, 163, 0,
	163, 584, 162, 163, 0, 163, 0, 164, 163, 164, 0, 164, 0, 164, 164, 0, 0, 0,
	395, 0, 0, 163, 0, 0, 598, 163, 164, 0, 163, 0, 163, 0, 164, 607, 164, 0,
	164, 0, 164, 162, 395, 164, 0, 0, 0, 0, 0, 0, 0, 0, 617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 164, 0, 164, 0, 124, 164, 0, 164, 0, 0, 164, 0, 0,
	-188, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164, 0, 0, 0, 164, 0, 0, 164, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 163, -113, -6, 0, 0, 163, 0, 163, 0, 163, -7, -8, -9,
	-10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, -106, 0, 164, 0, 164, 0, 164, 0, 0, 0, 0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -215, 0, 0, 0, 0, 0, 0, 0, 0, -114, -115, 0,
	-106, 0, 0, 0, 164, -117, -118, -119, -120, -121, -122, -123, -124, -125,
	-126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138,
	-139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -470, 0, -114,
	-115, 164, 0, 0, 0, 0, 0, -117, -118, -119, -120, -121, -122, -123, -124,
	-125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137,
	-138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, 132, 0, 0,
	0, 0, 0, 0, 0, -387, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -113, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8,
	-9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23,
	-24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38,
	-106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -114, -115, 0, 0, 0, 0, 0, 0,
	-117, -118, -119, -120, -121, -122, -123, -124, -125, -126, -127, -128, -129,
	-130, -131, -132, -133, -134, -135, -136, -137, -138, -139, -140, -141, -142,
	-143, -144, -145, -146, -147, -148, -106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-573, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, -114, -115, 0, 0, 0, 0, 0, 0, -117, -118, -119, -120, -121, -122, -123,
	-124, -125, -126, -127, -128, -129, -130, -131, -132, -133, -134, -135, -136,
	-137, -138, -139, -140, -141, -142, -143, -144, -145, -146, -147, -148, -1,
	-1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, 0,
	0, 0, 0, -1, -1, -1, -1, -1, -1, -238, -1, -1, -1, -1, 0, -1, -1, -1, 0, 0,
	0, -1, -1, -1, 0, 0, -1, 0, 0, 341, 0, 0, 0, 0, 0, 0, 0, 0, 0, 341, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, -106, 0, 0, 0, 0, 0, -1, -7, -8, -9, -10,
	-11, -12, -13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25,
	-26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -114, -115,
	0, 0, 0, 0, 0, 0, -117, -118, -119, -120, -121, -122, -123, -124, -125, -126,
	-127, -128, -129, -130, -131, -132, -133, -134, -135, -136, -137, -138, -139,
	-140, -141, -142, -143, -144, -145, -146, -147, -148, -341, 0, 0, 0, -342, 0,
	0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13,
	-81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28,
	-29, -30, -31, -32, -33, -34, -35, -36, -37, -38, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 158, 0, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 159, 0, 0, 159, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 158, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 158, 0, 158, 0, 0, 158, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 234, 158, 0, 158, 0, 158, 0, 158, 158, 0, 0, 0, 0, 0, 0,
	0, 159, 0, 159, 0, 233, 159, 159, 0, 0, 0, 158, 0, 0, 0, 0, 0, 158, 0, 0,
	233, 0, 159, 0, 159, 0, 159, 0, 159, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 158, 0, 158, 0, 158, 159, 0, 158, 0, 158, 160, 159, 158, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 160, 158, 0, 160, 0, 158, 0, 0, 158, 0, 158, 160, 159,
	0, 159, 0, 159, 0, 0, 159, 0, 159, 0, 0, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 159, 0, 0, 0, 159, 0, 0, 159, 0, 159, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 160, 0, 0,
	160, 160, 0, 0, 0, 0, 0, 0, 158, 0, 0, 0, 0, 158, 0, 158, 160, 158, 160, 0,
	160, 0, 160, 160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 0, 0, 0, 0, 0, 160,
	0, 0, 159, 0, 0, 160, 0, 159, 235, 159, 0, 159, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 160, 0, 160, 0, 160, 0, 0, 160, 0, 160, 0, 0, 160,
	-185, 0, 0, 0, 0, 0, 0, 0, 159, 158, 0, 0, 160, 0, 0, 0, 160, 0, 0, 160, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0,
	159, 0, -7, -8, -9, -10, -11, -12, -13, -81, -15, -16, -17, -18, -82, -20,
	-21, -22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35,
	-36, -37, -38, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -208, 0, 0, 0, 0, 0, 0,
	160, 0, -6, 0, 0, 160, 0, 160, 0, 160, -7, -8, -9, -10, -11, -12, -13, -81,
	-15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29,
	-30, -31, -32, -33, -34, -35, -36, -37, -38, 0, 0, 0, 0, 0, 0, 0, 160, -1,
	-1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, 0, 0, -1, -1, -1, -1, 0,
	0, 0, 0, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, 160, -1, -1, -1, 0, 0,
	-387, -239, -1, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, -1, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -16, -17, -18, -19, -20, -21, -22, -23, -24, -25, -26,
	-27, -28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -455, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12,
	-13, -81, -15, -16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27,
	-28, -29, -30, -31, -32, -33, -34, -35, -36, -37, -38, -6, 0, 0, 0, 0, 0, 0,
	0, -7, -8, -9, -10, -11, -12, -13, -14, -15, -16, -17, -18, -19, -20, -21,
	-22, -23, -24, -25, -26, -27, -28, -29, -30, -31, -32, -33, -34, -35, -36,
	-37, -38, -6, 0, 0, 0, 0, 0, 0, 0, -7, -8, -9, -10, -11, -12, -13, -81, -15,
	-16, -17, -18, -82, -20, -21, -22, -23, -24, -25, -26, -27, -28, -29, -30,
	-31, -32, -33, -34, -35, -36, -37, -38, -1, -1, 0, -1, -1, -1, -1, -1, 0, -1,
	0, -1, -1, -1, -1, 0, 0, -1, -1, -240, -1, 0, 0, 0, 0, -1, -1, -1, -241,
	-242, -1, 0, -1, -1, -1, -1, 156, -1, -1, -1, 0, 0, 0, 0, -1, -1, 0, 0, -1,
	0, 156, 0, 0, 156, 0, 0, 0, 0, 0, 0, 0, 212, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 157, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 227, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 156, 0, 0, 156, 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 156, 0, 156, 0, 156, 0, 156, 156, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	157, 0, 0, 157, 157, 0, 0, 0, 156, 0, 0, 0, 0, 0, 156, 0, 0, 0, 0, 157, 0,
	157, 0, 157, 0, 157, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 156, 0, 156, 0,
	156, 157, 0, 156, 0, 156, 153, 157, 156, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 156, 0, 153, 0, 156, 0, 0, 156, 0, 156, 153, 157, 0, 157, 0, 157, 0, 0,
	157, 0, 157, 154, 0, 157, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 154, 157, 0, 154,
	0, 157, 0, 0, 157, 0, 157, 154, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 153, 0, 153, 0, 0, 153, 153, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 156, 0, 156, 153, 156, 153, 0, 153, 0, 153, 153, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 154, 0, 0, 154, 154, 0, 0, 0, 153, 0, 0, 157, 0, 0,
	346, 0, 157, 0, 157, 154, 157, 154, 0, 154, 156, 154, 154, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 153, 0, 153, 154, 0, 153, 0, 153, 152, 154, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 156, 0, 192, 153, 0, 196, 0, 153, 0, 0, 153, 0,
	153, 211, 154, 0, 154, 0, 154, 0, 0, 154, 0, 154, 0, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 154, 0, 0, 0, 154, 0, 0, 154, 0, 154, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0,
	250, 0, 0, 254, 255, 0, 0, 0, 0, 0, 0, 153, 0, 0, 0, 0, 153, 0, 153, 273,
	153, 275, 0, 277, 0, 279, 280, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 297, 0, 0, 154, 0, 0, 0, 0, 154, 0, 154, 0, 154, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 360, 0, 362, 0, 0, 365, 0, 367, 0,
	0, 371, 0, 0, 0, 0, 0, 0, 0, 0, 154, 153, 0, 0, 403, 0, 0, 0, 406, 0, 0, 409,
	0, 411, 0, -1, -1, 0, -1, -1, -1, -1, -1, 0, -1, 0, -1, -1, -1, -1, 0, 0, -1,
	-1, 0, -1, 0, 154, 0, 0, -1, -223, -1, 0, 0, -1, 0, -1, -1, 0, -1, 0, -1, -1,
	-1, 0, 0, 0, 0, -1, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 441, 0, 0, 0, 0, 444, -1, 446, 0, 448,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	512,
}

var tmCheck = []int16{
	83, 18, 19, 18, 19, 37, 23, 18, 23, 109, 18, 26, 23, 18, 97, 23, 21, 100, 1,
	1, 3, 4, 5, 6, 7, 108, 109, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 28, 29, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 89,
	65, 91, 43, 44, 45, 46, 47, 48, 81, 52, 265, 2, 3, 154, 11, 156, 13, 14, 81,
	18, 19, 10, 457, 20, 23, 18, 17, 26, 19, 20, 23, 172, 75, 174, 10, 24, 177,
	178, 35, 15, 81, 82, 18, 265, 355, 2, 204, 17, 24, 40, 20, 375, 193, 44, 195,
	213, 197, 48, 199, 200, 37, 10, 38, 204, 17, 18, 15, 43, 10, 95, 83, 212,
	213, 15, 27, 17, 18, 218, 219, 220, 18, 222, 24, 224, 97, 265, 227, 100, 81,
	49, 180, 526, 219, 53, 54, 108, 237, 57, 58, 107, 60, 43, 62, 63, 81, 82, 57,
	67, 249, 69, 251, 71, 253, 73, 91, 256, 76, 258, 429, 554, 261, 219, 73, 378,
	265, 560, 103, 84, 2, 3, 2, 3, 267, 274, 292, 0, 93, 278, 296, 377, 281, 154,
	283, 156, 9, 19, 20, 19, 18, 18, 19, 292, 587, 23, 23, 296, 378, 298, 299,
	172, 265, 174, 188, 189, 177, 178, 40, 18, 40, 15, 44, 298, 44, 265, 48, 21,
	48, 2, 3, 15, 193, 17, 195, 107, 197, 11, 199, 200, 18, 19, 18, 349, 333, 23,
	20, 23, 520, 11, 378, 212, 298, 299, 12, 50, 10, 218, 20, 17, 349, 35, 68,
	224, 81, 468, 227, 11, 74, 27, 24, 44, 361, 35, 460, 48, 20, 366, 266, 368,
	34, 370, 77, 469, 12, 80, 70, 15, 249, 378, 251, 35, 253, 382, 268, 256, 17,
	258, 468, 0, 261, 18, 37, 451, 452, 81, 27, 18, 9, 392, 18, 417, 23, 274,
	573, 23, 10, 278, 10, 156, 281, 410, 283, 15, 527, 378, 451, 452, 417, 52,
	24, 10, 288, 238, 290, 424, 595, 426, 378, 377, 468, 15, 528, 17, 450, 24,
	81, 82, 83, 424, 86, 426, 75, 88, 89, 34, 91, 527, 447, 10, 10, 450, 97, 98,
	15, 100, 101, 10, 103, 475, 476, 107, 24, 108, 24, 212, 0, 483, 424, 468,
	426, 24, 34, 18, 34, 9, 475, 476, 23, 95, 227, 34, 10, 18, 483, 265, 10, 15,
	386, 527, 361, 15, 550, 52, 17, 366, 10, 368, 514, 370, 17, 15, 10, 265, 27,
	468, 288, 15, 290, 154, 27, 156, 460, 72, 18, 514, 242, 10, 468, 23, 10, 469,
	15, 292, 540, 15, 10, 172, 527, 174, 175, 15, 177, 178, 179, 180, 377, 10,
	10, 410, 10, 540, 15, 15, 10, 15, 81, 378, 193, 15, 195, 544, 197, 569, 199,
	200, 201, 10, 10, 86, 206, 10, 15, 15, 527, 12, 15, 212, 15, 10, 569, 266,
	188, 218, 15, 221, 447, 527, 10, 224, 528, 10, 227, 15, 10, 10, 15, 10, 10,
	15, 15, 10, 15, 15, 10, 167, 15, 10, 10, 15, 246, 2, 15, 15, 249, 148, 251,
	8, 253, 10, 15, 256, 17, 258, 259, 16, 261, 15, 19, 17, 21, 22, 23, 24, 15,
	266, 17, 221, 469, 274, 20, 476, 385, 278, 21, 36, 281, 21, 283, 40, 41, 42,
	288, 458, 290, 37, 47, 18, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 109, 51, 18, 18, 556, 24, 2, 468, 15, 82, 386, 12, 339, 340, 18, 527,
	18, 74, 18, 18, 18, 18, 15, 15, 18, 468, 12, 579, 355, 79, 20, 82, 584, 483,
	586, 361, 588, 24, 246, 27, 366, 18, 368, 569, 370, 27, 598, 18, 600, 3, 484,
	603, 20, 605, 24, 607, 18, 609, 18, 15, 15, 12, 614, 47, 386, 617, 23, 619,
	15, 621, 477, 15, 18, 15, 626, 2, 15, 15, 15, 24, 15, 8, 0, 10, 410, 0, 0, 3,
	15, 16, 0, 375, 19, 78, 21, 22, 23, 24, 78, 555, 353, 109, 429, 430, 95, 266,
	266, 386, 385, 36, 334, 385, 86, 40, 41, 42, 476, 212, -1, 221, 47, 447, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 430, 392, 221, -1, -1,
	-1, -1, -1, 2, -1, -1, -1, -1, -1, 8, -1, 10, -1, -1, -1, -1, 15, 16, -1, -1,
	19, -1, 21, 22, 23, -1, -1, 296, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1,
	-1, -1, 40, 41, 42, -1, -1, -1, -1, 47, 535, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 2, -1, -1, 573, -1, -1, 8, -1, 10, -1, -1, -1, -1,
	15, 16, -1, -1, -1, -1, 21, 22, 23, 24, -1, -1, 595, -1, -1, -1, -1, -1, -1,
	-1, -1, 36, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, 8, -1, 10, -1,
	-1, -1, -1, -1, 16, -1, -1, -1, -1, 21, 22, 23, 24, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 36, -1, -1, -1, 40, 41, 42, -1, -1, -1, 46, 47, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, 8,
	-1, 10, -1, -1, -1, 1, 15, 16, -1, -1, -1, -1, 21, 22, 23, 24, 12, -1, -1,
	-1, -1, 17, -1, -1, -1, -1, -1, 36, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1,
	47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1,
	-1, -1, -1, 8, -1, 10, -1, -1, -1, -1, 15, 16, -1, 85, 86, -1, 21, 22, 23,
	24, -1, -1, 94, 95, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, 106, 107, 41, 42,
	-1, -1, -1, -1, 47, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	1, 168, 3, 4, 5, 6, 7, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, -1, 526, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
	206, -1, -1, 43, 44, 45, 46, 47, 48, -1, -1, -1, 267, 219, 554, 221, 556, -1,
	-1, -1, 560, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 286, 287, -1, -1, -1,
	242, 243, -1, 579, 246, 81, 82, -1, 584, -1, -1, 587, 588, -1, 267, -1, -1,
	-1, -1, -1, -1, -1, 598, 265, 266, -1, -1, -1, -1, 605, -1, 607, -1, 286,
	287, -1, -1, -1, -1, -1, -1, 617, -1, -1, -1, -1, 288, -1, 290, -1, -1, -1,
	-1, -1, -1, -1, 298, 299, -1, -1, -1, 83, -1, -1, 355, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 97, -1, -1, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 339, 340, -1, -1, 392, 355, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 355, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 154, 375, 156, -1, 378, -1, 429, 392, -1, -1, -1, -1,
	386, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177, 178, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 193, -1, 195, -1, 197, 429, 199, 200, -1,
	-1, -1, 424, -1, 426, -1, -1, 429, 430, -1, 212, -1, 434, -1, -1, -1, 218,
	219, 220, -1, 222, -1, 224, -1, -1, 227, -1, -1, -1, 451, 452, -1, -1, -1,
	-1, 237, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 468, 249, -1, 251, -1, 253,
	474, -1, 256, 477, 258, -1, -1, 261, -1, -1, -1, 485, -1, -1, -1, -1, -1, -1,
	-1, -1, 274, 544, -1, -1, 278, -1, -1, 281, -1, 283, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 298, 299, 520, -1, -1, -1, 573, -1, -1, 527,
	-1, -1, -1, 0, 1, 544, 3, 4, 5, 6, 7, -1, 9, 541, 11, 12, 13, 14, 595, -1,
	17, 18, 550, 20, -1, 333, -1, -1, 25, 26, 27, -1, -1, 30, 573, 32, 33, 34,
	35, -1, 37, 38, 39, -1, -1, 573, -1, 44, 45, -1, -1, 48, -1, 361, -1, -1,
	595, -1, 366, -1, 368, -1, 370, -1, -1, -1, -1, 595, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, -1, -1, -1, -1, -1, -1,
	2, -1, -1, -1, -1, -1, -1, -1, 10, 410, 12, -1, -1, -1, -1, -1, 18, -1, -1,
	21, -1, -1, 24, 424, 26, 426, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1,
	-1, 41, 42, -1, -1, -1, -1, -1, 447, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1,
	-1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1,
	-1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12,
	-1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1,
	-1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1,
	-1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1,
	-1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1,
	-1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1,
	24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42,
	-1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1,
	-1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1,
	-1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1,
	-1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34,
	-1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1,
	12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1,
	-1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1,
	-1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26,
	-1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1,
	-1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1,
	-1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1,
	-1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18,
	-1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1,
	-1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1,
	-1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1,
	34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10,
	-1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1,
	-1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1,
	-1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1,
	26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2,
	-1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21,
	-1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1,
	41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1,
	18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1,
	-1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1,
	-1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1,
	-1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1,
	10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1,
	-1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1,
	-1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24,
	-1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1,
	-1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1,
	21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1,
	-1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1,
	-1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1,
	-1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12,
	-1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1,
	-1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1,
	-1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1,
	-1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1,
	-1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1,
	24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42,
	-1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1,
	-1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1,
	-1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1,
	-1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34,
	-1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53,
	54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72,
	73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1,
	12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1,
	-1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1,
	-1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26,
	-1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1,
	-1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1,
	-1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1,
	-1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18,
	-1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1,
	-1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10, -1, 12, -1, -1,
	-1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1, -1, -1, -1, -1,
	34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1, -1, -1, -1, 10,
	-1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1, 26, -1, -1, -1,
	-1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, -1, -1,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 2, -1, -1, -1, -1,
	-1, -1, -1, 10, -1, 12, -1, -1, -1, -1, -1, 18, -1, -1, 21, -1, -1, 24, -1,
	26, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 1,
	-1, 3, 4, 5, 6, 7, -1, -1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, -1, -1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, -1,
	-1, -1, 43, 44, 45, 46, 47, 48, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1,
	-1, 81, 82, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1,
	-1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1,
	-1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2,
	-1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50,
	51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, 94, -1, -1, -1, -1,
	8, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1,
	-1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 0, -1, 2, -1,
	-1, -1, -1, -1, 8, 9, -1, 184, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 81, 0, -1, 2, -1, -1, -1, -1, -1, 8, 9, 83, -1, 267, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 95, -1, 97, 25, 26, 100, -1, -1, -1, 286, 287, -1, -1, 108,
	-1, -1, -1, -1, 40, 41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 81, -1, 156, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 172, 355, 174, -1, -1, 177, 178, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 193, -1, 195, -1, 197, -1, 199, 200, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 392, -1, 212, -1, -1, -1, -1, -1, 218, -1,
	-1, -1, -1, -1, 224, -1, -1, 227, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 0, 429, 2, 249, -1, 251, -1, 253, 8, 9, 256, -1,
	258, -1, -1, 261, -1, -1, -1, 83, -1, 267, -1, -1, -1, -1, 26, -1, 274, -1,
	-1, -1, 278, 97, -1, 281, 100, 283, -1, -1, 40, 41, 42, -1, 108, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 154, -1, 156, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 172, -1, 174, -1, -1, 177, 178, 361, 544, -1, -1, -1, 366, -1,
	368, -1, 370, -1, -1, -1, -1, 193, -1, 195, 378, 197, -1, 199, 200, -1, -1,
	-1, 386, -1, -1, -1, -1, 573, 392, -1, 212, -1, -1, -1, -1, -1, 218, -1, 220,
	-1, 222, -1, 224, -1, -1, 227, 410, -1, -1, 595, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 249, -1, 251, -1, 253, -1, -1, 256,
	-1, 258, -1, -1, 261, -1, -1, -1, 447, -1, -1, -1, -1, -1, -1, -1, -1, 274,
	-1, -1, -1, 278, -1, -1, 281, 41, 283, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, 2, -1, -1, -1, -1, -1, 8,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 527, -1, -1, 25, 26, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 361, 544, 40, 41, 42, 366, -1, 368,
	-1, 370, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1,
	-1, -1, -1, 410, -1, -1, -1, -1, -1, -1, 18, 19, -1, -1, -1, 23, -1, -1, 26,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1,
	-1, -1, 447, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18,
	19, -1, -1, -1, 23, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 41, -1, -1, -1, -1, -1, 530, 531, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 81, 565, 2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 36, -1, -1, -1, -1, 41, 42, -1, -1, -1, -1, 47, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, -1, 9,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, 45, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1,
	-1, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41,
	42, 2, 3, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	-1, 41, -1, -1, 44, -1, -1, -1, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
	59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
	78, 79, 80, 83, -1, -1, -1, 27, -1, 29, -1, -1, -1, 33, -1, -1, -1, 97, -1,
	-1, 100, 41, -1, -1, -1, -1, -1, -1, 108, 49, 50, 51, 52, 53, 54, 55, 56, 57,
	58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76,
	77, 78, 79, 80, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1, -1, -1, 154, -1,
	156, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, -1, -1, -1, 172, -1,
	174, 108, -1, 177, 178, -1, -1, -1, -1, -1, -1, -1, -1, 267, -1, -1, -1, -1,
	-1, 193, -1, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, 286, 287, -1,
	-1, -1, -1, 212, -1, -1, -1, -1, -1, 218, -1, 220, 154, 222, 156, 224, -1,
	-1, 227, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1,
	177, 178, -1, -1, -1, 249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, 193,
	261, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, 274, 355, -1, -1,
	278, 212, -1, 281, -1, 283, -1, 218, -1, 220, -1, 222, -1, 224, -1, -1, 227,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1, -1, -1, -1, -1, -1, 392, -1,
	-1, -1, 249, -1, 251, 97, 253, -1, 100, 256, -1, 258, -1, -1, 261, -1, 108,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 274, -1, -1, -1, 278, -1, -1, 281,
	429, 283, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 361, -1, -1, -1, -1, 366,
	-1, 368, -1, 370, -1, 83, -1, -1, -1, 154, -1, 156, -1, -1, -1, -1, -1, -1,
	-1, 97, -1, -1, 100, -1, 471, 472, -1, 172, -1, 174, 108, -1, 177, 178, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 410, -1, -1, -1, -1, 193, -1, 195, -1, 197,
	-1, 199, 200, -1, -1, -1, -1, -1, 361, -1, -1, -1, -1, 366, 212, 368, -1,
	370, -1, -1, 218, -1, 220, 154, 222, 156, 224, 447, -1, 227, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 172, -1, 174, 544, -1, 177, 178, -1, -1, -1, 249,
	-1, 251, -1, 253, 556, 410, 256, -1, 258, -1, 193, 261, 195, -1, 197, -1,
	199, 200, -1, -1, -1, 573, -1, -1, 274, -1, -1, 579, 278, 212, -1, 281, -1,
	283, -1, 218, 588, 220, -1, 222, -1, 224, 447, 595, 227, -1, -1, -1, -1, -1,
	-1, -1, -1, 605, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 249, -1,
	251, -1, 253, -1, 0, 256, -1, 258, -1, -1, 261, -1, -1, 9, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 274, -1, -1, -1, 278, -1, -1, 281, -1, 283, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 361, 40, 41, -1, -1, 366, -1, 368, -1, 370, 49,
	50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68,
	69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1, -1, -1, -1,
	410, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 361,
	-1, -1, 2, -1, 366, -1, 368, -1, 370, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	447, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1,
	-1, -1, -1, -1, 41, 42, -1, 2, -1, -1, -1, 410, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 39, -1, 41, 42, 447, -1, -1, -1, -1, -1, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70,
	71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 0, -1, -1, -1, -1, -1, -1, -1, 8, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, 41, -1, -1, -1, -1, -1, -1,
	-1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,
	67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 42, -1, -1,
	-1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 2, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41,
	42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
	80, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13, 14, -1, -1, 17, 18, 19,
	20, -1, -1, -1, -1, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, -1, 37, 38,
	39, -1, -1, -1, 43, 44, 45, -1, -1, 48, -1, -1, 17, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 2,
	-1, -1, -1, -1, -1, 82, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80,
	41, 42, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, 29, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1,
	-1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 83, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, -1, -1, -1,
	-1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 97, -1, -1, 100, -1, -1, -1, -1, -1, -1,
	-1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, 156, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177, 178,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, 156, 193, -1, 195, -1,
	197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, 212, 177,
	178, -1, -1, -1, 218, -1, -1, -1, -1, -1, 224, -1, -1, 227, -1, 193, -1, 195,
	-1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 212, 249,
	-1, 251, -1, 253, 218, -1, 256, -1, 258, 83, 224, 261, -1, 227, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 97, 274, -1, 100, -1, 278, -1, -1, 281, -1, 283, 108,
	249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, -1, 261, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 274, -1, -1, -1, 278, -1, -1, 281, -1, 283, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 154, -1, 156, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1, 177, 178, -1, -1, -1,
	-1, -1, -1, 361, -1, -1, -1, -1, 366, -1, 368, 193, 370, 195, -1, 197, -1,
	199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 212, -1, -1, -1, -1,
	-1, 218, -1, -1, 361, -1, -1, 224, -1, 366, 227, 368, -1, 370, -1, -1, -1,
	410, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 249, -1, 251,
	-1, 253, -1, -1, 256, -1, 258, -1, -1, 261, 2, -1, -1, -1, -1, -1, -1, -1,
	410, 447, -1, -1, 274, -1, -1, -1, 278, -1, -1, 281, -1, 283, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1,
	447, -1, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, -1, -1, -1, -1, -1, 361, -1, 41,
	-1, -1, 366, -1, 368, -1, 370, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,
	60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78,
	79, 80, -1, -1, -1, -1, -1, -1, -1, 410, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1,
	11, 12, 13, 14, -1, -1, 17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27, 28, 29,
	30, -1, 32, 33, 34, 35, 447, 37, 38, 39, -1, -1, 8, 43, 44, 45, -1, -1, 48,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, 82, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54, 55, 56,
	57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 78, 79, 80, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52, 53, 54,
	55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 76, 77, 78, 79, 80, 41, -1, -1, -1, -1, -1, -1, -1, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1, 11,
	12, 13, 14, -1, -1, 17, 18, 19, 20, -1, -1, -1, -1, 25, 26, 27, 28, 29, 30,
	-1, 32, 33, 34, 35, 83, 37, 38, 39, -1, -1, -1, -1, 44, 45, -1, -1, 48, -1,
	97, -1, -1, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, -1, -1, 97, -1,
	-1, 100, -1, -1, -1, -1, -1, -1, -1, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	154, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172,
	-1, 174, -1, -1, 177, 178, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 154,
	-1, -1, 193, -1, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, 172,
	-1, 174, -1, -1, 177, 178, -1, -1, -1, 218, -1, -1, -1, -1, -1, 224, -1, -1,
	-1, -1, 193, -1, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 249, -1, 251, -1, 253, 218, -1, 256, -1, 258, 83, 224, 261,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, 274, -1, 100, -1, 278, -1,
	-1, 281, -1, 283, 108, 249, -1, 251, -1, 253, -1, -1, 256, -1, 258, 83, -1,
	261, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 97, 274, -1, 100, -1, 278,
	-1, -1, 281, -1, 283, 108, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1,
	-1, 177, 178, -1, -1, -1, -1, -1, -1, 361, -1, -1, -1, -1, 366, -1, 368, 193,
	370, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174,
	-1, -1, 177, 178, -1, -1, -1, 218, -1, -1, 361, -1, -1, 224, -1, 366, -1,
	368, 193, 370, 195, -1, 197, 410, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 249, -1, 251, -1, 253, 218, -1, 256, -1, 258, 83, 224, 261,
	-1, -1, -1, -1, -1, -1, -1, -1, 410, 447, -1, 97, 274, -1, 100, -1, 278, -1,
	-1, 281, -1, 283, 108, 249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, -1,
	261, -1, -1, -1, -1, -1, -1, -1, -1, -1, 447, -1, -1, 274, -1, -1, -1, 278,
	-1, -1, 281, -1, 283, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 172, -1, 174, -1, -1,
	177, 178, -1, -1, -1, -1, -1, -1, 361, -1, -1, -1, -1, 366, -1, 368, 193,
	370, 195, -1, 197, -1, 199, 200, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 218, -1, -1, 361, -1, -1, -1, -1, 366, -1, 368, -1,
	370, -1, -1, -1, 410, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	249, -1, 251, -1, 253, -1, -1, 256, -1, 258, -1, -1, 261, -1, -1, -1, -1, -1,
	-1, -1, -1, 410, 447, -1, -1, 274, -1, -1, -1, 278, -1, -1, 281, -1, 283, -1,
	0, 1, -1, 3, 4, 5, 6, 7, -1, 9, -1, 11, 12, 13, 14, -1, -1, 17, 18, -1, 20,
	-1, 447, -1, -1, 25, 26, 27, -1, -1, 30, -1, 32, 33, -1, 35, -1, 37, 38, 39,
	-1, -1, -1, -1, 44, 45, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 361, -1,
	-1, -1, -1, 366, 82, 368, -1, 370, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 410, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, 447,
}

var tmRuleLen = []int8{
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 5, 5, 4, 5, 4, 4, 3, 2, 0, 2, 0, 6,
	3, 3, 3, 4, 3, 3, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 4, 3, 3, 3,
	1, 9, 8, 8, 7, 8, 7, 7, 6, 6, 5, 8, 7, 7, 6, 7, 6, 6, 5, 5, 4, 8, 7, 7, 6, 7,
	6, 6, 5, 5, 4, 7, 6, 6, 5, 6, 5, 5, 4, 4, 3, 3, 3, 1, 1, 5, 4, 4, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 8, 7, 7, 6, 7, 6, 6, 5, 7, 6, 6, 5, 6, 5, 5, 4, 7,
	6, 6, 5, 8, 7, 7, 6, 7, 6, 6, 5, 3, 1, 1, 1, 1, 7, 5, 6, 4, 4, 4, 4, 5, 5, 6,
	4, 4, 5, 3, 1, 3, 1, 2, 1, 1, 2, 1, 3, 3, 2, 2, 1, 2, 1, 1, 0, 1, 3, 5, 4, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 2, 3, 1, 3, 1, 3, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 3, 1, 4, 2, 1, 3, 5, 5, 2, 2, 4, 1, 4, 2, 1, 3, 2, 1, 3, 3, 3, 1, 3,
	1, 4, 2, 1, 3, 3, 1, 1, 0, 3, 1, 2, 2, 1, 1, 1, 1, 1, 2, 3, 3, 1, 3, 3, 1, 4,
	3, 3, 2, 1, 3, 1, 1, 0,
}

var tmRuleSymbol = []int32{
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 83, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 84, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 86, 87, 88, 88, 89, 89, 89,
	90, 91, 92, 93, 93, 93, 93, 93, 93, 93, 93, 94, 94, 95, 95, 96, 96, 97, 98,
	99, 99, 100, 101, 102, 102, 103, 104, 104, 105, 105, 105, 105, 106, 106, 106,
	106, 106, 107, 108, 109, 109, 110, 110, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 112, 113, 114, 114, 115, 115, 115, 116, 116, 117, 118, 119,
	119, 120, 120, 120, 121, 121, 121, 121, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 123, 124, 124, 124, 125, 126, 126, 126, 126,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 128, 128, 129, 129, 130, 130,
	131, 131, 132, 132, 133, 133, 133, 133, 133, 133, 133, 133, 133, 134, 135,
	135, 135, 135, 136, 137, 137, 138, 138, 138, 138, 138, 138, 139, 139, 139,
	139, 139, 139, 139, 140, 140, 141, 142, 142, 143, 144, 144, 144, 145, 145,
	146, 146, 147, 147, 148, 149, 149, 149, 149, 149, 149, 149, 149, 150, 151,
	151, 151, 151, 152, 152, 152, 153, 153, 154, 155, 155, 155, 156, 157, 158,
	158, 159, 159, 160, 160, 160, 160, 161, 161, 162, 162, 163, 163, 163, 163,
	164, 164, 164, 165, 165, 165, 165, 165, 165, 166, 166, 167, 167,
}

var tmRuleType = [...]NodeType{
	Identifier,           // identifier : ID
	Identifier,           // identifier : 'brackets'
	Identifier,           // identifier : 'inline'
	Identifier,           // identifier : 'prec'
	Identifier,           // identifier : 'shift'
	Identifier,           // identifier : 'input'
	Identifier,           // identifier : 'left'
	Identifier,           // identifier : 'right'
	Identifier,           // identifier : 'nonassoc'
	Identifier,           // identifier : 'generate'
	Identifier,           // identifier : 'assert'
	Identifier,           // identifier : 'empty'
	Identifier,           // identifier : 'nonempty'
	Identifier,           // identifier : 'global'
	Identifier,           // identifier : 'explicit'
	Identifier,           // identifier : 'lookahead'
	Identifier,           // identifier : 'param'
	Identifier,           // identifier : 'flag'
	Identifier,           // identifier : 'no-eoi'
	Identifier,           // identifier : 's'
	Identifier,           // identifier : 'x'
	Identifier,           // identifier : 'expect'
	Identifier,           // identifier : 'expect-rr'
	Identifier,           // identifier : 'class'
	Identifier,           // identifier : 'interface'
	Identifier,           // identifier : 'space'
	Identifier,           // identifier : 'extend'
	Identifier,           // identifier : 'inject'
	Identifier,           // identifier : 'layout'
	Identifier,           // identifier : 'language'
	Identifier,           // identifier : 'lalr'
	Identifier,           // identifier : 'lexer'
	Identifier,           // identifier : 'parser'
	Identifier,           // identifier_Keywords : ID
	Identifier,           // identifier_Keywords : 'brackets'
	Identifier,           // identifier_Keywords : 'inline'
	Identifier,           // identifier_Keywords : 'prec'
	Identifier,           // identifier_Keywords : 'shift'
	Identifier,           // identifier_Keywords : 'input'
	Identifier,           // identifier_Keywords : 'left'
	Identifier,           // identifier_Keywords : 'right'
	Identifier,           // identifier_Keywords : 'nonassoc'
	Identifier,           // identifier_Keywords : 'generate'
	Identifier,           // identifier_Keywords : 'assert'
	Identifier,           // identifier_Keywords : 'empty'
	Identifier,           // identifier_Keywords : 'nonempty'
	Identifier,           // identifier_Keywords : 'global'
	Identifier,           // identifier_Keywords : 'explicit'
	Identifier,           // identifier_Keywords : 'lookahead'
	Identifier,           // identifier_Keywords : 'param'
	Identifier,           // identifier_Keywords : 'flag'
	Identifier,           // identifier_Keywords : 'no-eoi'
	Identifier,           // identifier_Keywords : 's'
	Identifier,           // identifier_Keywords : 'x'
	Identifier,           // identifier_Keywords : 'expect'
	Identifier,           // identifier_Keywords : 'expect-rr'
	Identifier,           // identifier_Keywords : 'class'
	Identifier,           // identifier_Keywords : 'interface'
	Identifier,           // identifier_Keywords : 'space'
	Identifier,           // identifier_Keywords : 'extend'
	Identifier,           // identifier_Keywords : 'inject'
	Identifier,           // identifier_Keywords : 'layout'
	Identifier,           // identifier_Keywords : 'language'
	Identifier,           // identifier_Keywords : 'lalr'
	Identifier,           // identifier_Keywords : 'lexer'
	Identifier,           // identifier_Keywords : 'parser'
	Identifier,           // identifier_Keywords : 'true'
	Identifier,           // identifier_Keywords : 'false'
	Identifier,           // identifier_Keywords : 'separator'
	Identifier,           // identifier_Keywords : 'as'
	Identifier,           // identifier_Keywords : 'import'
	Identifier,           // identifier_Keywords : 'set'
	Identifier,           // identifier_Str : ID
	Identifier,           // identifier_Str : quoted_id
	Identifier,           // identifier_Str : scon
	Identifier,           // identifier_Str : 'brackets'
	Identifier,           // identifier_Str : 'inline'
	Identifier,           // identifier_Str : 'prec'
	Identifier,           // identifier_Str : 'shift'
	Identifier,           // identifier_Str : 'input'
	Identifier,           // identifier_Str : 'left'
	Identifier,           // identifier_Str : 'right'
	Identifier,           // identifier_Str : 'nonassoc'
	Identifier,           // identifier_Str : 'generate'
	Identifier,           // identifier_Str : 'assert'
	Identifier,           // identifier_Str : 'empty'
	Identifier,           // identifier_Str : 'nonempty'
	Identifier,           // identifier_Str : 'global'
	Identifier,           // identifier_Str : 'explicit'
	Identifier,           // identifier_Str : 'lookahead'
	Identifier,           // identifier_Str : 'param'
	Identifier,           // identifier_Str : 'flag'
	Identifier,           // identifier_Str : 'no-eoi'
	Identifier,           // identifier_Str : 's'
	Identifier,           // identifier_Str : 'x'
	Identifier,           // identifier_Str : 'expect'
	Identifier,           // identifier_Str : 'expect-rr'
	Identifier,           // identifier_Str : 'class'
	Identifier,           // identifier_Str : 'interface'
	Identifier,           // identifier_Str : 'space'
	Identifier,           // identifier_Str : 'extend'
	Identifier,           // identifier_Str : 'inject'
	Identifier,           // identifier_Str : 'layout'
	Identifier,           // identifier_Str : 'language'
	Identifier,           // identifier_Str : 'lalr'
	Identifier,           // identifier_Str : 'lexer'
	Identifier,           // identifier_Str : 'parser'
	IntegerLiteral,       // integer_literal : icon
	StringLiteral,        // string_literal : scon
	BooleanLiteral,       // boolean_literal : 'true'
	BooleanLiteral,       // boolean_literal : 'false'
	0,                    // literal : string_literal
	0,                    // literal : integer_literal
	0,                    // literal : boolean_literal
	Pattern,              // pattern : regexp
	Command,              // command : code
	SyntaxProblem,        // syntax_problem : error
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem lexer_section
	0,                    // file : header import__optlist option_optlist syntax_problem parser_section
	0,                    // file : header import__optlist option_optlist syntax_problem
	0,                    // file : header import__optlist option_optlist lexer_section parser_section
	0,                    // file : header import__optlist option_optlist lexer_section
	0,                    // file : header import__optlist option_optlist parser_section
	0,                    // file : header import__optlist option_optlist
	0,                    // import__optlist : import__optlist import_
	0,                    // import__optlist :
	0,                    // option_optlist : option_optlist option
	0,                    // option_optlist :
	Header,               // header : 'language' identifier_Keywords '(' identifier_Keywords ')' ';'
	Header,               // header : 'language' identifier_Keywords ';'
	LexerSection,         // lexer_section : '::' .recoveryScope 'lexer' lexer_parts
	ParserSection,        // parser_section : '::' .recoveryScope 'parser' grammar_parts
	Import,               // import_ : 'import' identifier string_literal ';'
	Import,               // import_ : 'import' string_literal ';'
	Option,               // option : identifier '=' expression
	Symref,               // symref : identifier_Str
	Symref,               // symref_Args : identifier_Str args
	Symref,               // symref_Args : identifier_Str
	RawType,              // rawType : code
	0,                    // lexer_parts : lexer_part
	0,                    // lexer_parts : lexer_parts lexer_part_OrSyntaxError
	0,                    // lexer_part : named_pattern
	0,                    // lexer_part : lexeme
	0,                    // lexer_part : lexer_directive
	0,                    // lexer_part : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : named_pattern
	0,                    // lexer_part_OrSyntaxError : lexeme
	0,                    // lexer_part_OrSyntaxError : lexer_directive
	0,                    // lexer_part_OrSyntaxError : start_conditions_scope
	0,                    // lexer_part_OrSyntaxError : syntax_problem
	NamedPattern,         // named_pattern : identifier '=' pattern
	StartConditionsScope, // start_conditions_scope : start_conditions '{' .recoveryScope lexer_parts '}'
	StartConditions,      // start_conditions : '<' '*' '>'
	StartConditions,      // start_conditions : '<' stateref_list_Comma_separated '>'
	0,                    // stateref_list_Comma_separated : stateref_list_Comma_separated ',' stateref
	0,                    // stateref_list_Comma_separated : stateref
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' pattern
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str lexeme_id rawTypeopt ':'
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern command
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' pattern
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : start_conditions identifier_Str rawTypeopt ':'
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern command
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' pattern
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : identifier_Str lexeme_id rawTypeopt ':'
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern integer_literal
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern lexeme_attrs command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern command
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' pattern
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':' lexeme_attrs
	Lexeme,               // lexeme : identifier_Str rawTypeopt ':'
	LexemeId,             // lexeme_id : '(' identifier_Keywords ')'
	LexemeAttrs,          // lexeme_attrs : '(' lexeme_attribute ')'
	LexemeAttribute,      // lexeme_attribute : 'class'
	LexemeAttribute,      // lexeme_attribute : 'space'
	DirectiveBrackets,    // lexer_directive : '%' 'brackets' symref symref ';'
	InclusiveStartConds,  // lexer_directive : '%' 's' lexer_state_list_Comma_separated ';'
	ExclusiveStartConds,  // lexer_directive : '%' 'x' lexer_state_list_Comma_separated ';'
	0,                    // lexer_state_list_Comma_separated : lexer_state_list_Comma_separated ',' lexer_state
	0,                    // lexer_state_list_Comma_separated : lexer_state
	Stateref,             // stateref : identifier
	LexerState,           // lexer_state : identifier
	0,                    // grammar_parts : grammar_part
	0,                    // grammar_parts : grammar_parts grammar_part_OrSyntaxError
	0,                    // grammar_part : nonterm
	0,                    // grammar_part : template_param
	0,                    // grammar_part : directive
	0,                    // grammar_part_OrSyntaxError : nonterm
	0,                    // grammar_part_OrSyntaxError : template_param
	0,                    // grammar_part_OrSyntaxError : directive
	0,                    // grammar_part_OrSyntaxError : syntax_problem
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias rawType ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : identifier rawType reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier rawType ':' rules ';'
	Nonterm,              // nonterm : identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : identifier ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : 'extend' identifier ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_params ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_alias reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier nonterm_alias ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier reportClause ':' rules ';'
	Nonterm,              // nonterm : 'inline' identifier ':' rules ';'
	NontermAlias,         // nonterm_alias : '[' identifier_Keywords ']'
	Assoc,                // assoc : 'left'
	Assoc,                // assoc : 'right'
	Assoc,                // assoc : 'nonassoc'
	ParamModifier,        // param_modifier : 'lookahead'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_modifier param_type identifier ';'
	TemplateParam,        // template_param : '%' param_type identifier '=' param_value ';'
	TemplateParam,        // template_param : '%' param_type identifier ';'
	DirectivePrio,        // directive : '%' assoc references ';'
	DirectiveInput,       // directive : '%' 'input' inputref_list_Comma_separated ';'
	DirectiveInterface,   // directive : '%' 'interface' identifier_list_Comma_separated ';'
	DirectiveAssert,      // directive : '%' 'assert' 'empty' rhsSet ';'
	DirectiveAssert,      // directive : '%' 'assert' 'nonempty' rhsSet ';'
	DirectiveSet,         // directive : '%' 'generate' identifier '=' rhsSet ';'
	DirectiveExpect,      // directive : '%' 'expect' integer_literal ';'
	DirectiveExpectRR,    // directive : '%' 'expect-rr' integer_literal ';'
	DirectiveInject,      // directive : '%' 'inject' symref reportClause ';'
	0,                    // identifier_list_Comma_separated : identifier_list_Comma_separated ',' identifier
	0,                    // identifier_list_Comma_separated : identifier
	0,                    // inputref_list_Comma_separated : inputref_list_Comma_separated ',' inputref
	0,                    // inputref_list_Comma_separated : inputref
	Inputref,             // inputref : symref 'no-eoi'
	Inputref,             // inputref : symref
	0,                    // references : symref
	0,                    // references : references symref
	0,                    // rules : rule0
	0,                    // rules : rules '|' rule0
	Rule,                 // rule0 : predicate rhsParts reportClause
	Rule,                 // rule0 : predicate rhsParts
	Rule,                 // rule0 : predicate reportClause
	Rule,                 // rule0 : predicate
	Rule,                 // rule0 : rhsParts reportClause
	Rule,                 // rule0 : rhsParts
	Rule,                 // rule0 : reportClause
	Rule,                 // rule0 :
	0,                    // rule0 : syntax_problem
	Predicate,            // predicate : '[' predicate_expression ']'
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated reportAs
	ReportClause,         // reportClause : '->' identifier '/' identifier_list_Comma_separated
	ReportClause,         // reportClause : '->' identifier reportAs
	ReportClause,         // reportClause : '->' identifier
	ReportAs,             // reportAs : 'as' identifier
	0,                    // rhsParts : rhsPart
	0,                    // rhsParts : rhsParts rhsPart_OrSyntaxError
	0,                    // rhsPart : rhsAssignment
	0,                    // rhsPart : command
	0,                    // rhsPart : rhsStateMarker
	0,                    // rhsPart : rhsLookahead
	RhsEmpty,             // rhsPart : '%' 'empty'
	RhsPrec,              // rhsPart : '%' 'prec' symref
	0,                    // rhsPart_OrSyntaxError : rhsAssignment
	0,                    // rhsPart_OrSyntaxError : command
	0,                    // rhsPart_OrSyntaxError : rhsStateMarker
	0,                    // rhsPart_OrSyntaxError : rhsLookahead
	RhsEmpty,             // rhsPart_OrSyntaxError : '%' 'empty'
	RhsPrec,              // rhsPart_OrSyntaxError : '%' 'prec' symref
	0,                    // rhsPart_OrSyntaxError : syntax_problem
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate_list_And_separated '&' lookahead_predicate
	0,                    // lookahead_predicate_list_And_separated : lookahead_predicate
	RhsLookahead,         // rhsLookahead : '(?=' lookahead_predicate_list_And_separated ')'
	LookaheadPredicate,   // lookahead_predicate : '!' symref
	LookaheadPredicate,   // lookahead_predicate : symref
	StateMarker,          // rhsStateMarker : '.' identifier
	0,                    // rhsAssignment : rhsOptional
	RhsAssignment,        // rhsAssignment : identifier_Str '=' rhsOptional
	RhsPlusAssignment,    // rhsAssignment : identifier_Str '+=' rhsOptional
	0,                    // rhsOptional : rhsCast
	RhsOptional,          // rhsOptional : rhsCast '?'
	0,                    // rhsCast : rhsAlias
	RhsCast,              // rhsCast : rhsAlias 'as' symref_Args
	0,                    // rhsAlias : rhsPrimary
	RhsAlias,             // rhsAlias : rhsPrimary '[' identifier_Keywords ']'
	ListSeparator,        // listSeparator : 'separator' references
	RhsSymbol,            // rhsPrimary : symref_Args
	RhsNested,            // rhsPrimary : '(' .recoveryScope rules ')'
	RhsPlusList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '+'
	RhsStarList,          // rhsPrimary : '(' .recoveryScope rhsParts listSeparator ')' '*'
	RhsPlusQuantifier,    // rhsPrimary : rhsPrimary '+'
	RhsStarQuantifier,    // rhsPrimary : rhsPrimary '*'
	RhsIgnored,           // rhsPrimary : '$' '(' .recoveryScope rules ')'
	0,                    // rhsPrimary : rhsSet
	RhsSet,               // rhsSet : 'set' '(' .recoveryScope setExpression ')'
	SetSymbol,            // setPrimary : identifier symref_Args
	SetSymbol,            // setPrimary : symref_Args
	SetCompound,          // setPrimary : '(' setExpression ')'
	SetComplement,        // setPrimary : '~' setPrimary
	0,                    // setExpression : setPrimary
	SetOr,                // setExpression : setExpression '|' setExpression
	SetAnd,               // setExpression : setExpression '&' setExpression
	0,                    // nonterm_param_list_Comma_separated : nonterm_param_list_Comma_separated ',' nonterm_param
	0,                    // nonterm_param_list_Comma_separated : nonterm_param
	NontermParams,        // nonterm_params : '<' nonterm_param_list_Comma_separated '>'
	0,                    // nonterm_param : param_ref
	InlineParameter,      // nonterm_param : identifier identifier '=' param_value
	InlineParameter,      // nonterm_param : identifier identifier
	ParamRef,             // param_ref : identifier
	SymrefArgs,           // args : '<' argument_list_Comma_separatedopt '>'
	0,                    // argument_list_Comma_separated : argument_list_Comma_separated ',' argument
	0,                    // argument_list_Comma_separated : argument
	0,                    // argument_list_Comma_separatedopt : argument_list_Comma_separated
	0,                    // argument_list_Comma_separatedopt :
	ArgumentVal,          // argument : param_ref ':' param_value
	ArgumentVal,          // argument : param_ref
	ArgumentTrue,         // argument : '+' param_ref
	ArgumentFalse,        // argument : '~' param_ref
	ParamType,            // param_type : 'flag'
	ParamType,            // param_type : 'param'
	0,                    // param_value : literal
	0,                    // param_value : param_ref
	0,                    // predicate_primary : param_ref
	PredicateNot,         // predicate_primary : '!' param_ref
	PredicateEq,          // predicate_primary : param_ref '==' literal
	PredicateNotEq,       // predicate_primary : param_ref '!=' literal
	0,                    // predicate_expression : predicate_primary
	PredicateAnd,         // predicate_expression : predicate_expression '&&' predicate_expression
	PredicateOr,          // predicate_expression : predicate_expression '||' predicate_expression
	0,                    // expression : literal
	Array,                // expression : '[' expression_list_Comma_separated ',' ']'
	Array,                // expression : '[' expression_list_Comma_separated ']'
	Array,                // expression : '[' ',' ']'
	Array,                // expression : '[' ']'
	0,                    // expression : syntax_problem
	0,                    // expression_list_Comma_separated : expression_list_Comma_separated ',' expression
	0,                    // expression_list_Comma_separated : expression
	0,                    // rawTypeopt : rawType
	0,                    // rawTypeopt :
}

// set(follow ERROR) = SCON, REM, COLONCOLON, OR, SEMICOLON, DOT, COMMA, RBRACK, LPAREN, LPARENQUESTASSIGN, MINUSGT, RPAREN, RBRACE, LT, DOLLAR, ERROR, ID, QUOTED_ID, SEPARATOR, SET, ASSERT, BRACKETS, CLASS, EMPTY, EXPECT, EXPECTMINUSRR, EXPLICIT, EXTEND, FLAG, GENERATE, GLOBAL, INJECT, INLINE, INPUT, INTERFACE, LALR, LANGUAGE, LAYOUT, LEFT, LEXER, LOOKAHEAD, NOMINUSEOI, NONASSOC, NONEMPTY, PARAM, PARSER, PREC, RIGHT, CHAR_S, SHIFT, SPACE, CHAR_X, CODE
var afterErr = []token.Type{
	2, 8, 9, 10, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 36, 40, 41, 42, 46, 47,
	49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
	68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
}
