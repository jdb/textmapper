// generated by Textmapper; DO NOT EDIT

package ast

import (
	"fmt"

	"github.com/inspirer/textmapper/parsers/js"
)

func ToJsNode(n *Node) JsNode {
	switch n.Type() {
	case js.Accessor:
		return &Accessor{n}
	case js.AdditiveExpr:
		return &AdditiveExpr{n}
	case js.Arguments:
		return &Arguments{n}
	case js.ArrayLiteral:
		return &ArrayLiteral{n}
	case js.ArrayPattern:
		return &ArrayPattern{n}
	case js.ArrowFunc:
		return &ArrowFunc{n}
	case js.AssertClause:
		return &AssertClause{n}
	case js.AssertEntry:
		return &AssertEntry{n}
	case js.AssertionKey:
		return &AssertionKey{n}
	case js.AssignmentExpr:
		return &AssignmentExpr{n}
	case js.AssignmentOperator:
		return &AssignmentOperator{n}
	case js.AsyncArrowFunc:
		return &AsyncArrowFunc{n}
	case js.AsyncFunc:
		return &AsyncFunc{n}
	case js.AsyncFuncExpr:
		return &AsyncFuncExpr{n}
	case js.AsyncGeneratorDeclaration:
		return &AsyncGeneratorDeclaration{n}
	case js.AsyncGeneratorExpression:
		return &AsyncGeneratorExpression{n}
	case js.AsyncGeneratorMethod:
		return &AsyncGeneratorMethod{n}
	case js.AsyncMethod:
		return &AsyncMethod{n}
	case js.Await:
		return &Await{n}
	case js.AwaitExpr:
		return &AwaitExpr{n}
	case js.BindingRestElement:
		return &BindingRestElement{n}
	case js.BitwiseAND:
		return &BitwiseAND{n}
	case js.BitwiseOR:
		return &BitwiseOR{n}
	case js.BitwiseXOR:
		return &BitwiseXOR{n}
	case js.Block:
		return &Block{n}
	case js.Body:
		return &Body{n}
	case js.BreakStmt:
		return &BreakStmt{n}
	case js.CallExpr:
		return &CallExpr{n}
	case js.Case:
		return &Case{n}
	case js.Catch:
		return &Catch{n}
	case js.Class:
		return &Class{n}
	case js.ClassBody:
		return &ClassBody{n}
	case js.ClassExpr:
		return &ClassExpr{n}
	case js.CoalesceExpr:
		return &CoalesceExpr{n}
	case js.CommaExpr:
		return &CommaExpr{n}
	case js.ComputedPropertyName:
		return &ComputedPropertyName{n}
	case js.ConciseBody:
		return &ConciseBody{n}
	case js.Cond:
		return &Cond{n}
	case js.ConditionalExpr:
		return &ConditionalExpr{n}
	case js.ContinueStmt:
		return &ContinueStmt{n}
	case js.DebuggerStmt:
		return &DebuggerStmt{n}
	case js.Declare:
		return &Declare{n}
	case js.DecoratorCall:
		return &DecoratorCall{n}
	case js.DecoratorExpr:
		return &DecoratorExpr{n}
	case js.Default:
		return &Default{n}
	case js.DefaultParameter:
		return &DefaultParameter{n}
	case js.DoWhileStmt:
		return &DoWhileStmt{n}
	case js.ElementBinding:
		return &ElementBinding{n}
	case js.EmptyDecl:
		return &EmptyDecl{n}
	case js.EmptyStmt:
		return &EmptyStmt{n}
	case js.EqualityExpr:
		return &EqualityExpr{n}
	case js.ExponentiationExpr:
		return &ExponentiationExpr{n}
	case js.ExportClause:
		return &ExportClause{n}
	case js.ExportDecl:
		return &ExportDecl{n}
	case js.ExportDefault:
		return &ExportDefault{n}
	case js.ExportSpec:
		return &ExportSpec{n}
	case js.ExprStmt:
		return &ExprStmt{n}
	case js.Extends:
		return &Extends{n}
	case js.Finally:
		return &Finally{n}
	case js.ForBinding:
		return &ForBinding{n}
	case js.ForCondition:
		return &ForCondition{n}
	case js.ForFinalExpr:
		return &ForFinalExpr{n}
	case js.ForInStmt:
		return &ForInStmt{n}
	case js.ForInStmtWithVar:
		return &ForInStmtWithVar{n}
	case js.ForOfStmt:
		return &ForOfStmt{n}
	case js.ForOfStmtWithVar:
		return &ForOfStmtWithVar{n}
	case js.ForStmt:
		return &ForStmt{n}
	case js.ForStmtWithVar:
		return &ForStmtWithVar{n}
	case js.Func:
		return &Func{n}
	case js.FuncExpr:
		return &FuncExpr{n}
	case js.Generator:
		return &Generator{n}
	case js.GeneratorExpr:
		return &GeneratorExpr{n}
	case js.GeneratorMethod:
		return &GeneratorMethod{n}
	case js.Getter:
		return &Getter{n}
	case js.IdentExpr:
		return &IdentExpr{n}
	case js.IfStmt:
		return &IfStmt{n}
	case js.ImportDecl:
		return &ImportDecl{n}
	case js.ImportSpec:
		return &ImportSpec{n}
	case js.InExpr:
		return &InExpr{n}
	case js.IndexAccess:
		return &IndexAccess{n}
	case js.Initializer:
		return &Initializer{n}
	case js.InstanceOfExpr:
		return &InstanceOfExpr{n}
	case js.JSXAttributeName:
		return &JSXAttributeName{n}
	case js.JSXClosingElement:
		return &JSXClosingElement{n}
	case js.JSXElement:
		return &JSXElement{n}
	case js.JSXElementName:
		return &JSXElementName{n}
	case js.JSXExpr:
		return &JSXExpr{n}
	case js.JSXFragment:
		return &JSXFragment{n}
	case js.JSXLiteral:
		return &JSXLiteral{n}
	case js.JSXNormalAttribute:
		return &JSXNormalAttribute{n}
	case js.JSXOpeningElement:
		return &JSXOpeningElement{n}
	case js.JSXSelfClosingElement:
		return &JSXSelfClosingElement{n}
	case js.JSXSpreadAttribute:
		return &JSXSpreadAttribute{n}
	case js.JSXSpreadExpr:
		return &JSXSpreadExpr{n}
	case js.JSXText:
		return &JSXText{n}
	case js.LabelIdent:
		return &LabelIdent{n}
	case js.LabelledStmt:
		return &LabelledStmt{n}
	case js.LetOrConst:
		return &LetOrConst{n}
	case js.LexicalBinding:
		return &LexicalBinding{n}
	case js.LexicalDecl:
		return &LexicalDecl{n}
	case js.Literal:
		return &Literal{n}
	case js.LiteralPropertyName:
		return &LiteralPropertyName{n}
	case js.LogicalAND:
		return &LogicalAND{n}
	case js.LogicalOR:
		return &LogicalOR{n}
	case js.MemberMethod:
		return &MemberMethod{n}
	case js.MemberVar:
		return &MemberVar{n}
	case js.Method:
		return &Method{n}
	case js.Module:
		return &Module{n}
	case js.ModuleSpec:
		return &ModuleSpec{n}
	case js.MultiplicativeExpr:
		return &MultiplicativeExpr{n}
	case js.NameIdent:
		return &NameIdent{n}
	case js.NameSpaceImport:
		return &NameSpaceImport{n}
	case js.NamedImports:
		return &NamedImports{n}
	case js.NamedTupleMember:
		return &NamedTupleMember{n}
	case js.NewExpr:
		return &NewExpr{n}
	case js.NewTarget:
		return &NewTarget{n}
	case js.NoElement:
		return &NoElement{n}
	case js.NotExpr:
		return &NotExpr{n}
	case js.ObjectLiteral:
		return &ObjectLiteral{n}
	case js.ObjectMethod:
		return &ObjectMethod{n}
	case js.ObjectPattern:
		return &ObjectPattern{n}
	case js.OptionalCallExpr:
		return &OptionalCallExpr{n}
	case js.OptionalIndexAccess:
		return &OptionalIndexAccess{n}
	case js.OptionalPropertyAccess:
		return &OptionalPropertyAccess{n}
	case js.OptionalTaggedTemplate:
		return &OptionalTaggedTemplate{n}
	case js.Parameters:
		return &Parameters{n}
	case js.Parenthesized:
		return &Parenthesized{n}
	case js.PostDec:
		return &PostDec{n}
	case js.PostInc:
		return &PostInc{n}
	case js.PreDec:
		return &PreDec{n}
	case js.PreInc:
		return &PreInc{n}
	case js.Property:
		return &Property{n}
	case js.PropertyAccess:
		return &PropertyAccess{n}
	case js.PropertyBinding:
		return &PropertyBinding{n}
	case js.ReferenceIdent:
		return &ReferenceIdent{n}
	case js.Regexp:
		return &Regexp{n}
	case js.RelationalExpr:
		return &RelationalExpr{n}
	case js.RestParameter:
		return &RestParameter{n}
	case js.ReturnStmt:
		return &ReturnStmt{n}
	case js.Setter:
		return &Setter{n}
	case js.ShiftExpr:
		return &ShiftExpr{n}
	case js.ShorthandProperty:
		return &ShorthandProperty{n}
	case js.SingleNameBinding:
		return &SingleNameBinding{n}
	case js.SpreadElement:
		return &SpreadElement{n}
	case js.SpreadProperty:
		return &SpreadProperty{n}
	case js.Static:
		return &Static{n}
	case js.StaticBlock:
		return &StaticBlock{n}
	case js.SuperExpr:
		return &SuperExpr{n}
	case js.SwitchStmt:
		return &SwitchStmt{n}
	case js.SyntaxProblem:
		return &SyntaxProblem{n}
	case js.TaggedTemplate:
		return &TaggedTemplate{n}
	case js.TemplateLiteral:
		return &TemplateLiteral{n}
	case js.This:
		return &This{n}
	case js.ThisExpr:
		return &ThisExpr{n}
	case js.ThrowStmt:
		return &ThrowStmt{n}
	case js.TryStmt:
		return &TryStmt{n}
	case js.TsAbstract:
		return &TsAbstract{n}
	case js.TsAccessibilityModifier:
		return &TsAccessibilityModifier{n}
	case js.TsAmbientBinding:
		return &TsAmbientBinding{n}
	case js.TsAmbientClass:
		return &TsAmbientClass{n}
	case js.TsAmbientEnum:
		return &TsAmbientEnum{n}
	case js.TsAmbientExportDecl:
		return &TsAmbientExportDecl{n}
	case js.TsAmbientFunc:
		return &TsAmbientFunc{n}
	case js.TsAmbientGlobal:
		return &TsAmbientGlobal{n}
	case js.TsAmbientImportAlias:
		return &TsAmbientImportAlias{n}
	case js.TsAmbientInterface:
		return &TsAmbientInterface{n}
	case js.TsAmbientModule:
		return &TsAmbientModule{n}
	case js.TsAmbientNamespace:
		return &TsAmbientNamespace{n}
	case js.TsAmbientTypeAlias:
		return &TsAmbientTypeAlias{n}
	case js.TsAmbientVar:
		return &TsAmbientVar{n}
	case js.TsArrayType:
		return &TsArrayType{n}
	case js.TsAsConstExpr:
		return &TsAsConstExpr{n}
	case js.TsAsExpr:
		return &TsAsExpr{n}
	case js.TsAssertsType:
		return &TsAssertsType{n}
	case js.TsCallSignature:
		return &TsCallSignature{n}
	case js.TsCastExpr:
		return &TsCastExpr{n}
	case js.TsConditional:
		return &TsConditional{n}
	case js.TsConst:
		return &TsConst{n}
	case js.TsConstructSignature:
		return &TsConstructSignature{n}
	case js.TsConstructorType:
		return &TsConstructorType{n}
	case js.TsDynamicImport:
		return &TsDynamicImport{n}
	case js.TsEnum:
		return &TsEnum{n}
	case js.TsEnumBody:
		return &TsEnumBody{n}
	case js.TsEnumMember:
		return &TsEnumMember{n}
	case js.TsExclToken:
		return &TsExclToken{n}
	case js.TsExport:
		return &TsExport{n}
	case js.TsExportAssignment:
		return &TsExportAssignment{n}
	case js.TsFuncType:
		return &TsFuncType{n}
	case js.TsImplementsClause:
		return &TsImplementsClause{n}
	case js.TsImportAliasDecl:
		return &TsImportAliasDecl{n}
	case js.TsImportRequireDecl:
		return &TsImportRequireDecl{n}
	case js.TsImportType:
		return &TsImportType{n}
	case js.TsImportTypeStart:
		return &TsImportTypeStart{n}
	case js.TsIndexMemberDecl:
		return &TsIndexMemberDecl{n}
	case js.TsIndexSignature:
		return &TsIndexSignature{n}
	case js.TsIndexedAccessType:
		return &TsIndexedAccessType{n}
	case js.TsInterface:
		return &TsInterface{n}
	case js.TsInterfaceExtends:
		return &TsInterfaceExtends{n}
	case js.TsIntersectionType:
		return &TsIntersectionType{n}
	case js.TsKeyOfType:
		return &TsKeyOfType{n}
	case js.TsLiteralType:
		return &TsLiteralType{n}
	case js.TsMappedType:
		return &TsMappedType{n}
	case js.TsMethodSignature:
		return &TsMethodSignature{n}
	case js.TsNamespace:
		return &TsNamespace{n}
	case js.TsNamespaceBody:
		return &TsNamespaceBody{n}
	case js.TsNamespaceExportDecl:
		return &TsNamespaceExportDecl{n}
	case js.TsNamespaceName:
		return &TsNamespaceName{n}
	case js.TsNonNull:
		return &TsNonNull{n}
	case js.TsNonNullableType:
		return &TsNonNullableType{n}
	case js.TsNullableType:
		return &TsNullableType{n}
	case js.TsObjectType:
		return &TsObjectType{n}
	case js.TsOptional:
		return &TsOptional{n}
	case js.TsOverride:
		return &TsOverride{n}
	case js.TsParenthesizedType:
		return &TsParenthesizedType{n}
	case js.TsPredefinedType:
		return &TsPredefinedType{n}
	case js.TsPropertySignature:
		return &TsPropertySignature{n}
	case js.TsReadonly:
		return &TsReadonly{n}
	case js.TsReadonlyType:
		return &TsReadonlyType{n}
	case js.TsRestType:
		return &TsRestType{n}
	case js.TsSatisfiesExpr:
		return &TsSatisfiesExpr{n}
	case js.TsTemplateLiteralType:
		return &TsTemplateLiteralType{n}
	case js.TsThisParameter:
		return &TsThisParameter{n}
	case js.TsThisType:
		return &TsThisType{n}
	case js.TsTupleType:
		return &TsTupleType{n}
	case js.TsTypeAliasDecl:
		return &TsTypeAliasDecl{n}
	case js.TsTypeAnnotation:
		return &TsTypeAnnotation{n}
	case js.TsTypeArguments:
		return &TsTypeArguments{n}
	case js.TsTypeConstraint:
		return &TsTypeConstraint{n}
	case js.TsTypeName:
		return &TsTypeName{n}
	case js.TsTypeOf:
		return &TsTypeOf{n}
	case js.TsTypeOnly:
		return &TsTypeOnly{n}
	case js.TsTypeParameter:
		return &TsTypeParameter{n}
	case js.TsTypeParameters:
		return &TsTypeParameters{n}
	case js.TsTypePredicate:
		return &TsTypePredicate{n}
	case js.TsTypeQuery:
		return &TsTypeQuery{n}
	case js.TsTypeReference:
		return &TsTypeReference{n}
	case js.TsTypeVar:
		return &TsTypeVar{n}
	case js.TsUnionType:
		return &TsUnionType{n}
	case js.TsUniqueType:
		return &TsUniqueType{n}
	case js.UnaryExpr:
		return &UnaryExpr{n}
	case js.Var:
		return &Var{n}
	case js.VarDecl:
		return &VarDecl{n}
	case js.VarStmt:
		return &VarStmt{n}
	case js.WhileStmt:
		return &WhileStmt{n}
	case js.WithStmt:
		return &WithStmt{n}
	case js.Yield:
		return &Yield{n}
	case js.MultiLineComment:
		return &MultiLineComment{n}
	case js.SingleLineComment:
		return &SingleLineComment{n}
	case js.InvalidToken:
		return &InvalidToken{n}
	case js.NoSubstitutionTemplate:
		return &NoSubstitutionTemplate{n}
	case js.TemplateHead:
		return &TemplateHead{n}
	case js.TemplateMiddle:
		return &TemplateMiddle{n}
	case js.TemplateTail:
		return &TemplateTail{n}
	case js.InsertedSemicolon:
		return &InsertedSemicolon{n}
	case js.NoType:
		return nilInstance
	}
	panic(fmt.Errorf("ast: unknown node type %v", n.Type()))
	return nil
}
